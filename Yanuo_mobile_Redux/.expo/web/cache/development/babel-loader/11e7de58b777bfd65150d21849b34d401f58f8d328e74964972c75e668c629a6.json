{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DinhPhongIUH\\\\Desktop\\\\nhap\\\\Yanuo_mobile_Redux\\\\screens\\\\context\\\\chatContext.js\";\nimport React, { useState, useContext, createContext, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageContext = createContext(null);\nexport const MessageProvider = ({\n  children\n}) => {\n  const [sendMessage, setSendMessage] = useState(null);\n  const [receiveMessage, setReceiveMessage] = useState(null);\n  return _jsxDEV(MessageContext.Provider, {\n    value: {\n      sendMessage,\n      setSendMessage,\n      receiveMessage,\n      setReceiveMessage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\nexport const useMessage = () => {\n  const context = useContext(MessageContext);\n  if (!context) {\n    throw new Error('UseMessage must be used within a MessageProvider');\n  }\n  return context;\n};","map":{"version":3,"names":["React","useState","useContext","createContext","useRef","useEffect","jsxDEV","_jsxDEV","MessageContext","MessageProvider","children","sendMessage","setSendMessage","receiveMessage","setReceiveMessage","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","useMessage","context","Error"],"sources":["C:/Users/DinhPhongIUH/Desktop/nhap/Yanuo_mobile_Redux/screens/context/chatContext.js"],"sourcesContent":["import React, {useState, useContext, createContext, useRef, useEffect} from \"react\";\r\n\r\nconst MessageContext = createContext(null);\r\n\r\nexport const MessageProvider = ({children}) => {\r\n    const [sendMessage, setSendMessage] = useState(null);\r\n    const [receiveMessage, setReceiveMessage] = useState(null);\r\n\r\n\r\n    return (\r\n        <MessageContext.Provider\r\n            value={{sendMessage, setSendMessage, receiveMessage, setReceiveMessage}}\r\n        >\r\n            {children}\r\n        </MessageContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useMessage = () => {\r\n    const context = useContext(MessageContext);\r\n    if (!context)\r\n    {\r\n        throw new Error('UseMessage must be used within a MessageProvider');\r\n    }\r\n    return context;\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,UAAU,EAAEC,aAAa,EAAEC,MAAM,EAAEC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpF,MAAMC,cAAc,GAAGL,aAAa,CAAC,IAAI,CAAC;AAE1C,OAAO,MAAMM,eAAe,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAC3C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAG1D,OACIM,OAAA,CAACC,cAAc,CAACO,QAAQ;IACpBC,KAAK,EAAE;MAACL,WAAW;MAAEC,cAAc;MAAEC,cAAc;MAAEC;IAAiB,CAAE;IAAAJ,QAAA,EAEvEA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAElC,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC5B,MAAMC,OAAO,GAAGpB,UAAU,CAACM,cAAc,CAAC;EAC1C,IAAI,CAACc,OAAO,EACZ;IACI,MAAM,IAAIC,KAAK,CAAC,kDAAkD,CAAC;EACvE;EACA,OAAOD,OAAO;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}