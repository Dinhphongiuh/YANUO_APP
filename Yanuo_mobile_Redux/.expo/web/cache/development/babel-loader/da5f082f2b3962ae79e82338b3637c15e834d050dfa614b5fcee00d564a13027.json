{"ast":null,"code":"import { getAssetByID } from '@react-native/assets-registry/registry';\nimport AssetSourceResolver from './AssetSourceResolver.web';\nlet _customSourceTransformer;\nexport function setCustomSourceTransformer(transformer) {\n  _customSourceTransformer = transformer;\n}\nexport default function resolveAssetSource(source) {\n  if (typeof source === 'object') {\n    return source;\n  }\n  const asset = getAssetByID(source);\n  if (!asset) {\n    return undefined;\n  }\n  const resolver = new AssetSourceResolver('https://expo.dev', null, asset);\n  if (_customSourceTransformer) {\n    return _customSourceTransformer(resolver);\n  }\n  return resolver.defaultAsset();\n}\nObject.defineProperty(resolveAssetSource, 'setCustomSourceTransformer', {\n  get() {\n    return setCustomSourceTransformer;\n  }\n});\nexport const {\n  pickScale\n} = AssetSourceResolver;","map":{"version":3,"names":["getAssetByID","AssetSourceResolver","_customSourceTransformer","setCustomSourceTransformer","transformer","resolveAssetSource","source","asset","undefined","resolver","defaultAsset","Object","defineProperty","get","pickScale"],"sources":["C:\\Users\\DinhPhongIUH\\Desktop\\nhap\\Yanuo_mobile_Redux\\node_modules\\expo-image\\src\\utils\\resolveAssetSource.web.ts"],"sourcesContent":["import { getAssetByID } from '@react-native/assets-registry/registry';\n\nimport AssetSourceResolver, { ResolvedAssetSource } from './AssetSourceResolver.web';\n\nlet _customSourceTransformer;\n\nexport function setCustomSourceTransformer(\n  transformer: (resolver: AssetSourceResolver) => ResolvedAssetSource\n): void {\n  _customSourceTransformer = transformer;\n}\n\n/**\n * `source` is either a number (opaque type returned by require('./foo.png'))\n * or an `ImageSource` like { uri: '<http location || file path>' }\n */\nexport default function resolveAssetSource(source: any): ResolvedAssetSource | undefined {\n  if (typeof source === 'object') {\n    return source;\n  }\n\n  const asset = getAssetByID(source);\n  if (!asset) {\n    return undefined;\n  }\n\n  const resolver = new AssetSourceResolver('https://expo.dev', null, asset);\n  if (_customSourceTransformer) {\n    return _customSourceTransformer(resolver);\n  }\n  return resolver.defaultAsset();\n}\n\nObject.defineProperty(resolveAssetSource, 'setCustomSourceTransformer', {\n  get() {\n    return setCustomSourceTransformer;\n  },\n});\n\nexport const { pickScale } = AssetSourceResolver;\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,wCAAwC;AAErE,OAAOC,mBAA4C,MAAM,2BAA2B;AAEpF,IAAIC,wBAAwB;AAE5B,OAAM,SAAUC,0BAA0BA,CACxCC,WAAmE;EAEnEF,wBAAwB,GAAGE,WAAW;AACxC;AAMA,eAAc,SAAUC,kBAAkBA,CAACC,MAAW;EACpD,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;IAC9B,OAAOA,MAAM;;EAGf,MAAMC,KAAK,GAAGP,YAAY,CAACM,MAAM,CAAC;EAClC,IAAI,CAACC,KAAK,EAAE;IACV,OAAOC,SAAS;;EAGlB,MAAMC,QAAQ,GAAG,IAAIR,mBAAmB,CAAC,kBAAkB,EAAE,IAAI,EAAEM,KAAK,CAAC;EACzE,IAAIL,wBAAwB,EAAE;IAC5B,OAAOA,wBAAwB,CAACO,QAAQ,CAAC;;EAE3C,OAAOA,QAAQ,CAACC,YAAY,EAAE;AAChC;AAEAC,MAAM,CAACC,cAAc,CAACP,kBAAkB,EAAE,4BAA4B,EAAE;EACtEQ,GAAGA,CAAA;IACD,OAAOV,0BAA0B;EACnC;CACD,CAAC;AAEF,OAAO,MAAM;EAAEW;AAAS,CAAE,GAAGb,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}