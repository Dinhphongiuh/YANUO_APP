{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nconst _excluded = [\"vertical\", \"children\", \"data\", \"renderItem\", \"renderAll\", \"index\", \"useReactNativeGestureHandler\", \"showPagination\", \"PaginationComponent\", \"paginationActiveColor\", \"paginationDefaultColor\", \"paginationStyle\", \"paginationStyleItem\", \"paginationStyleItemActive\", \"paginationStyleItemInactive\", \"onPaginationSelectedIndex\", \"paginationTapDisabled\", \"autoplayDelay\", \"autoplay\", \"autoplayLoop\", \"autoplayLoopKeepAnimation\", \"autoplayInvertDirection\", \"onChangeIndex\", \"onMomentumScrollEnd\", \"onViewableItemsChanged\", \"viewabilityConfig\", \"disableGesture\", \"e2eID\"];\nvar _jsxFileName = \"C:\\\\Users\\\\DinhPhongIUH\\\\Desktop\\\\nhap\\\\Yanuo_mobile_Redux\\\\node_modules\\\\react-native-swiper-flatlist\\\\src\\\\components\\\\SwiperFlatList\\\\SwiperFlatList.tsx\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport RNFlatList from \"react-native-web/dist/exports/FlatList\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { Pagination } from '../Pagination/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MILLISECONDS = 1000;\nconst FIRST_INDEX = 0;\nconst ITEM_VISIBLE_PERCENT_THRESHOLD = 60;\nexport const SwiperFlatList = React.forwardRef((_ref, ref) => {\n  let {\n      vertical = false,\n      children,\n      data = [],\n      renderItem,\n      renderAll = false,\n      index = I18nManager.isRTL ? data.length - 1 : FIRST_INDEX,\n      useReactNativeGestureHandler = false,\n      showPagination = false,\n      PaginationComponent = Pagination,\n      paginationActiveColor,\n      paginationDefaultColor,\n      paginationStyle,\n      paginationStyleItem,\n      paginationStyleItemActive,\n      paginationStyleItemInactive,\n      onPaginationSelectedIndex,\n      paginationTapDisabled = false,\n      autoplayDelay = 3,\n      autoplay = false,\n      autoplayLoop = false,\n      autoplayLoopKeepAnimation = false,\n      autoplayInvertDirection = I18nManager.isRTL,\n      onChangeIndex,\n      onMomentumScrollEnd,\n      onViewableItemsChanged,\n      viewabilityConfig = {},\n      disableGesture = false,\n      e2eID\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  let _data = [];\n  let _renderItem;\n  if (children) {\n    _data = Array.isArray(children) ? children : [children];\n    _renderItem = ({\n      item\n    }) => item;\n  } else if (data) {\n    _data = data;\n    _renderItem = renderItem;\n  } else {\n    console.error('Invalid props, `data` or `children` is required');\n  }\n  const size = _data.length;\n  const _initialNumToRender = renderAll ? size : 1;\n  const [currentIndexes, setCurrentIndexes] = React.useState({\n    index,\n    prevIndex: index\n  });\n  const [ignoreOnMomentumScrollEnd, setIgnoreOnMomentumScrollEnd] = React.useState(false);\n  const flatListElement = React.useRef(null);\n  const [scrollEnabled, setScrollEnabled] = React.useState(!disableGesture);\n  React.useEffect(() => {\n    setScrollEnabled(!disableGesture);\n  }, [disableGesture]);\n  const _onChangeIndex = React.useCallback(({\n    index: _index,\n    prevIndex: _prevIndex\n  }) => {\n    if (_index !== _prevIndex) {\n      onChangeIndex?.({\n        index: _index,\n        prevIndex: _prevIndex\n      });\n    }\n  }, [onChangeIndex]);\n  const _scrollToIndex = React.useCallback(params => {\n    const {\n      index: indexToScroll,\n      animated = true\n    } = params;\n    const newParams = {\n      animated,\n      index: indexToScroll\n    };\n    setIgnoreOnMomentumScrollEnd(true);\n    const next = {\n      index: indexToScroll,\n      prevIndex: currentIndexes.index\n    };\n    if (currentIndexes.index !== next.index && currentIndexes.prevIndex !== next.prevIndex) {\n      setCurrentIndexes({\n        index: next.index,\n        prevIndex: next.prevIndex\n      });\n    } else if (currentIndexes.index !== next.index) {\n      setCurrentIndexes(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n        index: next.index\n      }));\n    } else if (currentIndexes.prevIndex !== next.prevIndex) {\n      setCurrentIndexes(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n        prevIndex: next.prevIndex\n      }));\n    }\n    flatListElement?.current?.scrollToIndex(newParams);\n  }, [currentIndexes.index, currentIndexes.prevIndex]);\n  React.useEffect(() => {\n    _onChangeIndex({\n      index: currentIndexes.index,\n      prevIndex: currentIndexes.prevIndex\n    });\n  }, [_onChangeIndex, currentIndexes.index, currentIndexes.prevIndex]);\n  React.useImperativeHandle(ref, () => ({\n    scrollToIndex: item => {\n      setScrollEnabled(true);\n      _scrollToIndex(item);\n      setScrollEnabled(!disableGesture);\n    },\n    getCurrentIndex: () => currentIndexes.index,\n    getPrevIndex: () => currentIndexes.prevIndex,\n    goToLastIndex: () => {\n      setScrollEnabled(true);\n      _scrollToIndex({\n        index: I18nManager.isRTL ? FIRST_INDEX : size - 1\n      });\n      setScrollEnabled(!disableGesture);\n    },\n    goToFirstIndex: () => {\n      setScrollEnabled(true);\n      _scrollToIndex({\n        index: I18nManager.isRTL ? size - 1 : FIRST_INDEX\n      });\n      setScrollEnabled(!disableGesture);\n    }\n  }));\n  React.useEffect(() => {\n    const isLastIndexEnd = autoplayInvertDirection ? currentIndexes.index === FIRST_INDEX : currentIndexes.index === _data.length - 1;\n    const shouldContinuoWithAutoplay = autoplay && !isLastIndexEnd;\n    let autoplayTimer;\n    if (shouldContinuoWithAutoplay || autoplayLoop) {\n      autoplayTimer = setTimeout(() => {\n        if (_data.length < 1) {\n          return;\n        }\n        if (!autoplay) {\n          return;\n        }\n        const nextIncrement = autoplayInvertDirection ? -1 : +1;\n        let nextIndex = (currentIndexes.index + nextIncrement) % _data.length;\n        if (autoplayInvertDirection && nextIndex < FIRST_INDEX) {\n          nextIndex = _data.length - 1;\n        }\n        const animate = !isLastIndexEnd || autoplayLoopKeepAnimation;\n        _scrollToIndex({\n          index: nextIndex,\n          animated: animate\n        });\n      }, autoplayDelay * MILLISECONDS);\n    }\n    return () => clearTimeout(autoplayTimer);\n  }, [autoplay, currentIndexes.index, _data.length, autoplayInvertDirection, autoplayLoop, autoplayDelay, autoplayLoopKeepAnimation, _scrollToIndex]);\n  const _onMomentumScrollEnd = event => {\n    if (ignoreOnMomentumScrollEnd) {\n      setIgnoreOnMomentumScrollEnd(false);\n      return;\n    }\n    onMomentumScrollEnd?.({\n      index: currentIndexes.index\n    }, event);\n  };\n  const _onViewableItemsChanged = React.useMemo(() => params => {\n    const {\n      changed\n    } = params;\n    const newItem = changed?.[FIRST_INDEX];\n    if (newItem !== undefined) {\n      const nextIndex = newItem.index;\n      if (newItem.isViewable) {\n        setCurrentIndexes(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n          index: nextIndex\n        }));\n      } else {\n        setCurrentIndexes(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n          prevIndex: nextIndex\n        }));\n      }\n    }\n    onViewableItemsChanged?.(params);\n  }, [onViewableItemsChanged]);\n  const flatListProps = _objectSpread(_objectSpread({\n    scrollEnabled,\n    ref: flatListElement,\n    keyExtractor: (_item, _index) => {\n      const item = _item;\n      const key = item?.key ?? item?.id ?? _index.toString();\n      return key;\n    },\n    horizontal: !vertical,\n    showsHorizontalScrollIndicator: false,\n    showsVerticalScrollIndicator: false,\n    pagingEnabled: true\n  }, props), {}, {\n    onMomentumScrollEnd: _onMomentumScrollEnd,\n    onScrollToIndexFailed: info => setTimeout(() => _scrollToIndex({\n      index: info.index,\n      animated: false\n    })),\n    data: _data,\n    renderItem: _renderItem,\n    initialNumToRender: _initialNumToRender,\n    initialScrollIndex: index,\n    viewabilityConfig: _objectSpread({\n      minimumViewTime: 200,\n      itemVisiblePercentThreshold: ITEM_VISIBLE_PERCENT_THRESHOLD\n    }, viewabilityConfig),\n    onViewableItemsChanged: _onViewableItemsChanged,\n    testID: e2eID\n  });\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  if (props.getItemLayout === undefined) {\n    const itemDimension = vertical ? height : width;\n    flatListProps.getItemLayout = (__data, ItemIndex) => ({\n      length: itemDimension,\n      offset: itemDimension * ItemIndex,\n      index: ItemIndex\n    });\n  }\n  if (Platform.OS === 'web') {\n    flatListProps.dataSet = {\n      'paging-enabled-fix': true\n    };\n  }\n  if (useReactNativeGestureHandler) {\n    console.warn('Please remove `useReactNativeGestureHandler` and import the library like:');\n    console.warn(\"import { SwiperFlatListWithGestureHandler } from 'react-native-swiper-flatlist/WithGestureHandler';\");\n  }\n  return _jsxDEV(React.Fragment, {\n    children: [_jsxDEV(RNFlatList, _objectSpread({}, flatListProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }, this), showPagination ? _jsxDEV(PaginationComponent, {\n      size: size,\n      paginationIndex: currentIndexes.index,\n      scrollToIndex: params => {\n        _scrollToIndex(params);\n      },\n      paginationActiveColor: paginationActiveColor,\n      paginationDefaultColor: paginationDefaultColor,\n      paginationStyle: paginationStyle,\n      paginationStyleItem: paginationStyleItem,\n      paginationStyleItemActive: paginationStyleItemActive,\n      paginationStyleItemInactive: paginationStyleItemInactive,\n      onPaginationSelectedIndex: onPaginationSelectedIndex,\n      paginationTapDisabled: paginationTapDisabled,\n      e2eID: e2eID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 7\n  }, this);\n});","map":{"version":3,"names":["React","RNFlatList","I18nManager","Platform","useWindowDimensions","Pagination","jsxDEV","_jsxDEV","MILLISECONDS","FIRST_INDEX","ITEM_VISIBLE_PERCENT_THRESHOLD","SwiperFlatList","forwardRef","_ref","ref","vertical","children","data","renderItem","renderAll","index","isRTL","length","useReactNativeGestureHandler","showPagination","PaginationComponent","paginationActiveColor","paginationDefaultColor","paginationStyle","paginationStyleItem","paginationStyleItemActive","paginationStyleItemInactive","onPaginationSelectedIndex","paginationTapDisabled","autoplayDelay","autoplay","autoplayLoop","autoplayLoopKeepAnimation","autoplayInvertDirection","onChangeIndex","onMomentumScrollEnd","onViewableItemsChanged","viewabilityConfig","disableGesture","e2eID","props","_objectWithoutProperties","_excluded","_data","_renderItem","Array","isArray","item","console","error","size","_initialNumToRender","currentIndexes","setCurrentIndexes","useState","prevIndex","ignoreOnMomentumScrollEnd","setIgnoreOnMomentumScrollEnd","flatListElement","useRef","scrollEnabled","setScrollEnabled","useEffect","_onChangeIndex","useCallback","_index","_prevIndex","_scrollToIndex","params","indexToScroll","animated","newParams","next","prevState","_objectSpread","current","scrollToIndex","useImperativeHandle","getCurrentIndex","getPrevIndex","goToLastIndex","goToFirstIndex","isLastIndexEnd","shouldContinuoWithAutoplay","autoplayTimer","setTimeout","nextIncrement","nextIndex","animate","clearTimeout","_onMomentumScrollEnd","event","_onViewableItemsChanged","useMemo","changed","newItem","undefined","isViewable","flatListProps","keyExtractor","_item","key","id","toString","horizontal","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","pagingEnabled","onScrollToIndexFailed","info","initialNumToRender","initialScrollIndex","minimumViewTime","itemVisiblePercentThreshold","testID","width","height","getItemLayout","itemDimension","__data","ItemIndex","offset","OS","dataSet","warn","Fragment","fileName","_jsxFileName","lineNumber","columnNumber","paginationIndex"],"sources":["C:/Users/DinhPhongIUH/Desktop/nhap/Yanuo_mobile_Redux/node_modules/react-native-swiper-flatlist/src/components/SwiperFlatList/SwiperFlatList.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  FlatList as RNFlatList,\n  FlatListProps,\n  I18nManager,\n  Platform,\n  useWindowDimensions,\n} from 'react-native';\n\nimport { Pagination } from '../Pagination/Pagination';\nimport { SwiperFlatListProps, SwiperFlatListRefProps } from './SwiperFlatListProps';\n\nconst MILLISECONDS = 1000;\nconst FIRST_INDEX = 0;\nconst ITEM_VISIBLE_PERCENT_THRESHOLD = 60;\n\n// TODO: figure out how to use forwardRef with generics\ntype T1 = any;\ntype ScrollToIndex = { index: number; animated?: boolean };\n\n// const SwiperFlatList = React.forwardRef<RefProps, SwiperFlatListProps<SwiperType>>(\nexport const SwiperFlatList = React.forwardRef(\n  // <T1 extends any>(\n  (\n    {\n      vertical = false,\n      children,\n      data = [],\n      renderItem,\n      renderAll = false,\n      index = I18nManager.isRTL ? data.length - 1 : FIRST_INDEX,\n      useReactNativeGestureHandler = false,\n      // Pagination\n      showPagination = false,\n      PaginationComponent = Pagination,\n      paginationActiveColor,\n      paginationDefaultColor,\n      paginationStyle,\n      paginationStyleItem,\n      paginationStyleItemActive,\n      paginationStyleItemInactive,\n      onPaginationSelectedIndex,\n      paginationTapDisabled = false,\n      // Autoplay\n      autoplayDelay = 3,\n      autoplay = false,\n      autoplayLoop = false,\n      autoplayLoopKeepAnimation = false,\n      autoplayInvertDirection = I18nManager.isRTL,\n      // Functions\n      onChangeIndex,\n      onMomentumScrollEnd,\n      onViewableItemsChanged,\n      viewabilityConfig = {},\n      disableGesture = false,\n      e2eID,\n      ...props\n    }: SwiperFlatListProps<T1>,\n    ref: React.Ref<SwiperFlatListRefProps>,\n  ) => {\n    let _data: unknown[] = [];\n    let _renderItem: FlatListProps<any>['renderItem'];\n\n    if (children) {\n      // github.com/gusgard/react-native-swiper-flatlist/issues/40\n      _data = Array.isArray(children) ? children : [children];\n      _renderItem = ({ item }) => item;\n    } else if (data) {\n      _data = data;\n      _renderItem = renderItem;\n    } else {\n      console.error('Invalid props, `data` or `children` is required');\n    }\n    const size = _data.length;\n    // Items to render in the initial batch.\n    const _initialNumToRender = renderAll ? size : 1;\n    const [currentIndexes, setCurrentIndexes] = React.useState({ index, prevIndex: index });\n    const [ignoreOnMomentumScrollEnd, setIgnoreOnMomentumScrollEnd] = React.useState(false);\n    const flatListElement = React.useRef<RNFlatList<unknown>>(null);\n    const [scrollEnabled, setScrollEnabled] = React.useState(!disableGesture);\n\n    React.useEffect(() => {\n      setScrollEnabled(!disableGesture);\n    }, [disableGesture]);\n\n    const _onChangeIndex = React.useCallback(\n      ({ index: _index, prevIndex: _prevIndex }: { index: number; prevIndex: number }) => {\n        if (_index !== _prevIndex) {\n          onChangeIndex?.({ index: _index, prevIndex: _prevIndex });\n        }\n      },\n      [onChangeIndex],\n    );\n\n    const _scrollToIndex = React.useCallback(\n      (params: ScrollToIndex) => {\n        const { index: indexToScroll, animated = true } = params;\n        const newParams = { animated, index: indexToScroll };\n\n        setIgnoreOnMomentumScrollEnd(true);\n\n        const next = {\n          index: indexToScroll,\n          prevIndex: currentIndexes.index,\n        };\n        if (currentIndexes.index !== next.index && currentIndexes.prevIndex !== next.prevIndex) {\n          setCurrentIndexes({ index: next.index, prevIndex: next.prevIndex });\n        } else if (currentIndexes.index !== next.index) {\n          setCurrentIndexes((prevState) => ({ ...prevState, index: next.index }));\n        } else if (currentIndexes.prevIndex !== next.prevIndex) {\n          setCurrentIndexes((prevState) => ({ ...prevState, prevIndex: next.prevIndex }));\n        }\n\n        // When execute \"scrollToIndex\", we ignore the method \"onMomentumScrollEnd\"\n        // because it not working on Android\n        // https://github.com/facebook/react-native/issues/21718\n        flatListElement?.current?.scrollToIndex(newParams);\n      },\n      [currentIndexes.index, currentIndexes.prevIndex],\n    );\n\n    // change the index when the user swipe the items\n    React.useEffect(() => {\n      _onChangeIndex({ index: currentIndexes.index, prevIndex: currentIndexes.prevIndex });\n    }, [_onChangeIndex, currentIndexes.index, currentIndexes.prevIndex]);\n\n    React.useImperativeHandle(ref, () => ({\n      scrollToIndex: (item: ScrollToIndex) => {\n        setScrollEnabled(true);\n        _scrollToIndex(item);\n        setScrollEnabled(!disableGesture);\n      },\n      getCurrentIndex: () => currentIndexes.index,\n      getPrevIndex: () => currentIndexes.prevIndex,\n      goToLastIndex: () => {\n        setScrollEnabled(true);\n        _scrollToIndex({ index: I18nManager.isRTL ? FIRST_INDEX : size - 1 });\n        setScrollEnabled(!disableGesture);\n      },\n      goToFirstIndex: () => {\n        setScrollEnabled(true);\n        _scrollToIndex({ index: I18nManager.isRTL ? size - 1 : FIRST_INDEX });\n        setScrollEnabled(!disableGesture);\n      },\n    }));\n\n    React.useEffect(() => {\n      const isLastIndexEnd = autoplayInvertDirection\n        ? currentIndexes.index === FIRST_INDEX\n        : currentIndexes.index === _data.length - 1;\n      const shouldContinuoWithAutoplay = autoplay && !isLastIndexEnd;\n      let autoplayTimer: ReturnType<typeof setTimeout>;\n      if (shouldContinuoWithAutoplay || autoplayLoop) {\n        autoplayTimer = setTimeout(() => {\n          if (_data.length < 1) {\n            // avoid nextIndex being set to NaN\n            return;\n          }\n\n          if (!autoplay) {\n            // disabled if autoplay is off\n            return;\n          }\n\n          const nextIncrement = autoplayInvertDirection ? -1 : +1;\n\n          let nextIndex = (currentIndexes.index + nextIncrement) % _data.length;\n          if (autoplayInvertDirection && nextIndex < FIRST_INDEX) {\n            nextIndex = _data.length - 1;\n          }\n\n          // Disable end loop animation unless `autoplayLoopKeepAnimation` prop configured\n          const animate = !isLastIndexEnd || autoplayLoopKeepAnimation;\n\n          _scrollToIndex({ index: nextIndex, animated: animate });\n        }, autoplayDelay * MILLISECONDS);\n      }\n      // https://upmostly.com/tutorials/settimeout-in-react-components-using-hooks\n      return () => clearTimeout(autoplayTimer);\n    }, [\n      autoplay,\n      currentIndexes.index,\n      _data.length,\n      autoplayInvertDirection,\n      autoplayLoop,\n      autoplayDelay,\n      autoplayLoopKeepAnimation,\n      _scrollToIndex,\n    ]);\n\n    const _onMomentumScrollEnd: FlatListProps<unknown>['onMomentumScrollEnd'] = (event) => {\n      // NOTE: Method not executed when call \"flatListElement?.current?.scrollToIndex\"\n      if (ignoreOnMomentumScrollEnd) {\n        setIgnoreOnMomentumScrollEnd(false);\n        return;\n      }\n\n      onMomentumScrollEnd?.({ index: currentIndexes.index }, event);\n    };\n\n    const _onViewableItemsChanged = React.useMemo<FlatListProps<unknown>['onViewableItemsChanged']>(\n      () => (params) => {\n        const { changed } = params;\n        const newItem = changed?.[FIRST_INDEX];\n        if (newItem !== undefined) {\n          const nextIndex = newItem.index as number;\n          if (newItem.isViewable) {\n            setCurrentIndexes((prevState) => ({ ...prevState, index: nextIndex }));\n          } else {\n            setCurrentIndexes((prevState) => ({ ...prevState, prevIndex: nextIndex }));\n          }\n        }\n        onViewableItemsChanged?.(params);\n      },\n      [onViewableItemsChanged],\n    );\n\n    const flatListProps: FlatListProps<unknown> & { ref: React.RefObject<RNFlatList<unknown>> } = {\n      scrollEnabled,\n      ref: flatListElement,\n      keyExtractor: (_item, _index) => {\n        const item = _item as { key?: string; id?: string };\n        const key = item?.key ?? item?.id ?? _index.toString();\n        return key;\n      },\n      horizontal: !vertical,\n      showsHorizontalScrollIndicator: false,\n      showsVerticalScrollIndicator: false,\n      pagingEnabled: true,\n      ...props,\n      onMomentumScrollEnd: _onMomentumScrollEnd,\n      onScrollToIndexFailed: (info) =>\n        setTimeout(() => _scrollToIndex({ index: info.index, animated: false })),\n      data: _data,\n      renderItem: _renderItem,\n      initialNumToRender: _initialNumToRender,\n      initialScrollIndex: index, // used with onScrollToIndexFailed\n      viewabilityConfig: {\n        // https://facebook.github.io/react-native/docs/flatlist#minimumviewtime\n        minimumViewTime: 200,\n        itemVisiblePercentThreshold: ITEM_VISIBLE_PERCENT_THRESHOLD,\n        ...viewabilityConfig,\n      },\n      onViewableItemsChanged: _onViewableItemsChanged,\n      // debug: true, // for debug\n      testID: e2eID,\n    };\n\n    const { width, height } = useWindowDimensions();\n    if (props.getItemLayout === undefined) {\n      const itemDimension = vertical ? height : width;\n      flatListProps.getItemLayout = (__data, ItemIndex: number) => ({\n        length: itemDimension,\n        offset: itemDimension * ItemIndex,\n        index: ItemIndex,\n      });\n    }\n    if (Platform.OS === 'web') {\n      // TODO: do we need this anymore? check 3.1.0\n      (flatListProps as any).dataSet = { 'paging-enabled-fix': true };\n    }\n\n    //NOTE: quick fix for the new version of metro bundler\n    // we should remove this console.warn in the next version (3.2.4)\n    if (useReactNativeGestureHandler) {\n      console.warn('Please remove `useReactNativeGestureHandler` and import the library like:');\n      console.warn(\n        \"import { SwiperFlatListWithGestureHandler } from 'react-native-swiper-flatlist/WithGestureHandler';\",\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <RNFlatList {...flatListProps} />\n        {showPagination ? (\n          <PaginationComponent\n            size={size}\n            paginationIndex={currentIndexes.index}\n            scrollToIndex={(params: ScrollToIndex) => {\n              _scrollToIndex(params);\n            }}\n            paginationActiveColor={paginationActiveColor}\n            paginationDefaultColor={paginationDefaultColor}\n            paginationStyle={paginationStyle}\n            paginationStyleItem={paginationStyleItem}\n            paginationStyleItemActive={paginationStyleItemActive}\n            paginationStyleItemInactive={paginationStyleItemInactive}\n            onPaginationSelectedIndex={onPaginationSelectedIndex}\n            paginationTapDisabled={paginationTapDisabled}\n            e2eID={e2eID}\n          />\n        ) : null}\n      </React.Fragment>\n    );\n  },\n);\n\n// https://gist.github.com/Venryx/7cff24b17867da305fff12c6f8ef6f96\ntype Handle<T> = T extends React.ForwardRefExoticComponent<React.RefAttributes<infer T2>>\n  ? T2\n  : never;\nexport type SwiperFlatList = Handle<typeof SwiperFlatList>;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}