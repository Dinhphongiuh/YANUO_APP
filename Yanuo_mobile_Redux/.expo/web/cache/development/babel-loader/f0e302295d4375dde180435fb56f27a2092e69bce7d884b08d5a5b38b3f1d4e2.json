{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { BaseGesture } from './gesture';\nexport class NativeGesture extends BaseGesture {\n  constructor() {\n    super();\n    _defineProperty(this, \"config\", {});\n    this.handlerName = 'NativeViewGestureHandler';\n  }\n  shouldActivateOnStart(value) {\n    this.config.shouldActivateOnStart = value;\n    return this;\n  }\n  disallowInterruption(value) {\n    this.config.disallowInterruption = value;\n    return this;\n  }\n}","map":{"version":3,"names":["BaseGesture","NativeGesture","constructor","_defineProperty","handlerName","shouldActivateOnStart","value","config","disallowInterruption"],"sources":["C:\\Users\\DinhPhongIUH\\Desktop\\nhap\\Yanuo_mobile_Redux\\node_modules\\react-native-gesture-handler\\lib\\module\\handlers\\gestures\\nativeGesture.ts"],"sourcesContent":["import { BaseGestureConfig, BaseGesture } from './gesture';\nimport {\n  NativeViewGestureConfig,\n  NativeViewGestureHandlerPayload,\n} from '../NativeViewGestureHandler';\n\nexport class NativeGesture extends BaseGesture<NativeViewGestureHandlerPayload> {\n  public config: BaseGestureConfig & NativeViewGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'NativeViewGestureHandler';\n  }\n\n  /**\n   * When true, underlying handler will activate unconditionally when in `BEGAN` or `UNDETERMINED` state.\n   * @param value\n   */\n  shouldActivateOnStart(value: boolean) {\n    this.config.shouldActivateOnStart = value;\n    return this;\n  }\n\n  /**\n   * When true, cancels all other gesture handlers when this `NativeViewGestureHandler` receives an `ACTIVE` state event.\n   * @param value\n   */\n  disallowInterruption(value: boolean) {\n    this.config.disallowInterruption = value;\n    return this;\n  }\n}\n\nexport type NativeGestureType = InstanceType<typeof NativeGesture>;\n"],"mappings":";;;;;;;;;;;;;AAAA,SAA4BA,WAA5B,QAA+C,WAA/C;AAMA,OAAO,MAAMC,aAAN,SAA4BD,WAA5B,CAAyE;EAG9EE,WAAWA,CAAA,EAAG;IACZ;IADYC,eAAA,iBAF+C,EAE/C;IAGZ,KAAKC,WAAL,GAAmB,0BAAnB;EACD;EAMDC,qBAAqBA,CAACC,KAAD,EAAiB;IACpC,KAAKC,MAAL,CAAYF,qBAAZ,GAAoCC,KAApC;IACA,OAAO,IAAP;EACD;EAMDE,oBAAoBA,CAACF,KAAD,EAAiB;IACnC,KAAKC,MAAL,CAAYC,oBAAZ,GAAmCF,KAAnC;IACA,OAAO,IAAP;EACD;AAzB6E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}