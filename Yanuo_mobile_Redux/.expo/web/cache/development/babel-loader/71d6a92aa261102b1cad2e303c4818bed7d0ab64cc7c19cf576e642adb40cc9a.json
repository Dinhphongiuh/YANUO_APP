{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nconst _excluded = [\"type\", \"isSender\", \"sender\", \"onLongPress\", \"onPressIn\"];\nvar _jsxFileName = \"C:\\\\Users\\\\DinhPhongIUH\\\\Desktop\\\\nhap\\\\Yanuo_mobile_Redux\\\\screens\\\\messageComponents\\\\Message.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TextMessage from './TextMessage';\nimport ImageMessage from './ImageMessage';\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageScreen = props => {\n  const {\n      type,\n      isSender,\n      sender,\n      onLongPress,\n      onPressIn\n    } = props,\n    rest = _objectWithoutProperties(props, _excluded);\n  const touchpadRef = useRef(null);\n  const handleLongPress = e => {\n    if (touchpadRef.current) {\n      touchpadRef.current.measure((x, y, width, height) => {\n        onLongPress(e, _objectSpread(_objectSpread({}, props), {}, {\n          layoutHeight\n        }), height);\n      });\n    }\n  };\n  const [layoutHeight, setLayoutHeight] = useState(0);\n  const onLayout = e => {\n    const {\n      height\n    } = e.nativeEvent.layout;\n    setLayoutHeight(height);\n  };\n  console.log('Layout height', layoutHeight);\n  return _jsxDEV(TouchableOpacity, {\n    activeOpacity: 0.9,\n    onPressIn: () => onPressIn(isSender),\n    onLongPress: handleLongPress,\n    ref: touchpadRef,\n    onLayout: onLayout,\n    children: _jsxDEV(View, {\n      style: [styles.container, isSender && styles.sender],\n      children: [!isSender && _jsxDEV(Image, {\n        source: {\n          uri: sender.avatar\n        },\n        resizeMode: \"cover\",\n        style: styles.avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), type === 'text' ? _jsxDEV(TextMessage, _objectSpread(_objectSpread({}, rest), {}, {\n        isSender: isSender\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this) : _jsxDEV(ImageMessage, _objectSpread({}, rest), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\nexport default MessageScreen;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    alignItems: 'flex-end',\n    flexDirection: 'row',\n    justifyContent: 'flex-start'\n  },\n  sender: {\n    justifyContent: 'flex-end'\n  },\n  avatar: {\n    width: 24,\n    height: 24,\n    marginLeft: 12,\n    backgroundColor: '#eee',\n    borderRadius: 15\n  }\n});","map":{"version":3,"names":["TextMessage","ImageMessage","useRef","useState","jsxDEV","_jsxDEV","MessageScreen","props","type","isSender","sender","onLongPress","onPressIn","rest","_objectWithoutProperties","_excluded","touchpadRef","handleLongPress","e","current","measure","x","y","width","height","_objectSpread","layoutHeight","setLayoutHeight","onLayout","nativeEvent","layout","console","log","TouchableOpacity","activeOpacity","ref","children","View","style","styles","container","Image","source","uri","avatar","resizeMode","fileName","_jsxFileName","lineNumber","columnNumber","StyleSheet","create","flex","backgroundColor","alignItems","flexDirection","justifyContent","marginLeft","borderRadius"],"sources":["C:/Users/DinhPhongIUH/Desktop/nhap/Yanuo_mobile_Redux/screens/messageComponents/Message.js"],"sourcesContent":["import { StyleSheet, Text, View, Image, TouchableOpacity, SafeAreaView, Dimensions, Animated, TouchableWithoutFeedback, ScrollView, PanResponder, KeyboardAvoidingView, FlatList, Platform, Keyboard} from 'react-native';\r\nimport TextMessage from './TextMessage';\r\nimport ImageMessage from './ImageMessage';\r\nimport { useRef, useState } from 'react';\r\n\r\nconst MessageScreen = props => {\r\n    const {type, isSender, sender, onLongPress, onPressIn, ...rest} = props;\r\n    \r\n    const touchpadRef = useRef(null);\r\n\r\n    const handleLongPress = (e) => {\r\n        if (touchpadRef.current) {\r\n            touchpadRef.current.measure((x, y, width, height) => {\r\n                // Gọi onLongPress từ lớp cha và truyền chiều cao\r\n                onLongPress(e, {...props, layoutHeight}, height);\r\n            });\r\n        }\r\n    };\r\n\r\n    const [layoutHeight, setLayoutHeight] = useState(0);\r\n\r\n    const onLayout = e => {\r\n        const {height} = e.nativeEvent.layout;\r\n        setLayoutHeight(height);\r\n    }\r\n    console.log('Layout height', layoutHeight);\r\n\r\n    return (\r\n        <TouchableOpacity \r\n            activeOpacity={0.9}\r\n            onPressIn={() => onPressIn(isSender)}\r\n            onLongPress={handleLongPress} \r\n            ref={touchpadRef}\r\n            onLayout={onLayout}\r\n        >\r\n            <View style={[styles.container, isSender && styles.sender]}>\r\n                {!isSender && (\r\n                    <Image\r\n                        source={{uri: sender.avatar}}\r\n                        resizeMode='cover'\r\n                        style={styles.avatar}\r\n                    ></Image>\r\n                )}\r\n                {type === 'text' ? (\r\n                    <TextMessage {...rest} isSender={isSender} /> \r\n                ) : (\r\n                    <ImageMessage {...rest}/>\r\n                )\r\n                }\r\n            </View>\r\n        </TouchableOpacity>\r\n    )\r\n};\r\n\r\nexport default MessageScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n        alignItems: 'flex-end',\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-start',\r\n      },\r\n      sender: {\r\n        justifyContent: 'flex-end',\r\n      },\r\n      avatar: {\r\n        width: 24,\r\n        height: 24,\r\n        marginLeft: 12,\r\n        backgroundColor: '#eee',\r\n        borderRadius: 15,\r\n      },\r\n})"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}