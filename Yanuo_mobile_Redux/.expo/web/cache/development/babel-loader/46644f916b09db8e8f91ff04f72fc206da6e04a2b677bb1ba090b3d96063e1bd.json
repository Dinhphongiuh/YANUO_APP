{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\DinhPhongIUH\\\\Desktop\\\\nhap\\\\Yanuo_mobile_Redux\\\\node_modules\\\\expo-av\\\\build\\\\ExponentVideo.web.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as React from 'react';\nimport createElement from 'react-native-web/dist/exports/createElement';\nimport ExponentAV from './ExponentAV';\nimport { addFullscreenListener } from './FullscreenUtils.web';\nimport { VideoFullscreenUpdate } from './Video.types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Video = React.forwardRef((props, ref) => createElement('video', _objectSpread(_objectSpread({}, props), {}, {\n  ref\n})));\nexport default class ExponentVideo extends React.Component {\n  componentWillUnmount() {\n    this._removeFullscreenListener?.();\n  }\n  onFullscreenChange = isFullscreen => {\n    if (!this.props.onFullscreenUpdate) return;\n    if (isFullscreen) {\n      this.props.onFullscreenUpdate({\n        nativeEvent: {\n          fullscreenUpdate: VideoFullscreenUpdate.PLAYER_DID_PRESENT\n        }\n      });\n    } else {\n      this.props.onFullscreenUpdate({\n        nativeEvent: {\n          fullscreenUpdate: VideoFullscreenUpdate.PLAYER_DID_DISMISS\n        }\n      });\n    }\n  };\n  onStatusUpdate = async () => {\n    if (!this.props.onStatusUpdate) {\n      return;\n    }\n    const nativeEvent = await ExponentAV.getStatusForVideo(this._video);\n    this.props.onStatusUpdate({\n      nativeEvent\n    });\n  };\n  onLoadStart = () => {\n    if (!this.props.onLoadStart) {\n      return;\n    }\n    this.props.onLoadStart();\n    this.onStatusUpdate();\n  };\n  onLoadedData = event => {\n    if (!this.props.onLoad) {\n      return;\n    }\n    this.props.onLoad(event);\n    this.onStatusUpdate();\n  };\n  onError = event => {\n    if (!this.props.onError) {\n      return;\n    }\n    this.props.onError(event);\n    this.onStatusUpdate();\n  };\n  onProgress = () => {\n    this.onStatusUpdate();\n  };\n  onSeeking = () => {\n    this.onStatusUpdate();\n  };\n  onEnded = () => {\n    this.onStatusUpdate();\n  };\n  onLoadedMetadata = () => {\n    this.onStatusUpdate();\n  };\n  onCanPlay = event => {\n    if (!this.props.onReadyForDisplay) {\n      return;\n    }\n    this.props.onReadyForDisplay(event);\n    this.onStatusUpdate();\n  };\n  onStalled = () => {\n    this.onStatusUpdate();\n  };\n  onRef = ref => {\n    this._removeFullscreenListener?.();\n    if (ref) {\n      this._video = ref;\n      this._removeFullscreenListener = addFullscreenListener(this._video, this.onFullscreenChange);\n      this.onStatusUpdate();\n    } else {\n      this._removeFullscreenListener = undefined;\n    }\n  };\n  render() {\n    const {\n      source,\n      status = {},\n      resizeMode: objectFit,\n      useNativeControls,\n      style\n    } = this.props;\n    const customStyle = {\n      position: undefined,\n      objectFit,\n      overflow: 'hidden'\n    };\n    return _jsxDEV(Video, {\n      ref: this.onRef,\n      onLoadStart: this.onLoadStart,\n      onLoadedData: this.onLoadedData,\n      onError: this.onError,\n      onTimeUpdate: this.onProgress,\n      onSeeking: this.onSeeking,\n      onEnded: this.onEnded,\n      onLoadedMetadata: this.onLoadedMetadata,\n      onCanPlay: this.onCanPlay,\n      onStalled: this.onStalled,\n      src: source?.uri || undefined,\n      muted: status.isMuted,\n      loop: status.isLooping,\n      autoPlay: status.shouldPlay,\n      controls: useNativeControls,\n      style: [style, customStyle],\n      playsInline: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this);\n  }\n}","map":{"version":3,"names":["React","createElement","ExponentAV","addFullscreenListener","VideoFullscreenUpdate","jsxDEV","_jsxDEV","Video","forwardRef","props","ref","_objectSpread","ExponentVideo","Component","componentWillUnmount","_removeFullscreenListener","onFullscreenChange","isFullscreen","onFullscreenUpdate","nativeEvent","fullscreenUpdate","PLAYER_DID_PRESENT","PLAYER_DID_DISMISS","onStatusUpdate","getStatusForVideo","_video","onLoadStart","onLoadedData","event","onLoad","onError","onProgress","onSeeking","onEnded","onLoadedMetadata","onCanPlay","onReadyForDisplay","onStalled","onRef","undefined","render","source","status","resizeMode","objectFit","useNativeControls","style","customStyle","position","overflow","onTimeUpdate","src","uri","muted","isMuted","loop","isLooping","autoPlay","shouldPlay","controls","playsInline","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:\\Users\\DinhPhongIUH\\Desktop\\nhap\\Yanuo_mobile_Redux\\node_modules\\expo-av\\src\\ExponentVideo.web.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ViewProps } from 'react-native';\nimport createElement from 'react-native-web/dist/exports/createElement';\n\nimport { AVPlaybackNativeSource, AVPlaybackStatus, AVPlaybackStatusToSet } from './AV';\nimport ExponentAV from './ExponentAV';\nimport { addFullscreenListener } from './FullscreenUtils.web';\nimport {\n  VideoFullscreenUpdate,\n  VideoFullscreenUpdateEvent,\n  VideoReadyForDisplayEvent,\n} from './Video.types';\n\ntype ExponentVideoProps = {\n  source: AVPlaybackNativeSource | null;\n  resizeMode?: object;\n  status?: AVPlaybackStatusToSet;\n  useNativeControls?: boolean;\n  onStatusUpdate?: (event: { nativeEvent: AVPlaybackStatus }) => void;\n  onReadyForDisplay?: (event: { nativeEvent: VideoReadyForDisplayEvent }) => void;\n  onFullscreenUpdate?: (event: { nativeEvent: VideoFullscreenUpdateEvent }) => void;\n  onLoadStart: () => void;\n  onLoad: (event: { nativeEvent: AVPlaybackStatus }) => void;\n  onError: (event: { nativeEvent: { error: string } }) => void;\n  // Required by react-native\n  scaleX?: number;\n  scaleY?: number;\n  translateX?: number;\n  translateY?: number;\n  rotation?: number;\n} & ViewProps;\n\nexport type NaturalSize = {\n  width: number;\n  height: number;\n  orientation: 'portrait' | 'landscape';\n};\n\nconst Video: any = React.forwardRef<HTMLVideoElement, ExponentVideoProps>((props, ref) =>\n  createElement('video', { ...props, ref })\n);\n\nexport default class ExponentVideo extends React.Component<ExponentVideoProps> {\n  _video?: HTMLVideoElement;\n  _removeFullscreenListener?: () => any;\n\n  componentWillUnmount() {\n    this._removeFullscreenListener?.();\n  }\n\n  onFullscreenChange = (isFullscreen: boolean) => {\n    if (!this.props.onFullscreenUpdate) return;\n    if (isFullscreen) {\n      this.props.onFullscreenUpdate({\n        nativeEvent: { fullscreenUpdate: VideoFullscreenUpdate.PLAYER_DID_PRESENT },\n      });\n    } else {\n      this.props.onFullscreenUpdate({\n        nativeEvent: { fullscreenUpdate: VideoFullscreenUpdate.PLAYER_DID_DISMISS },\n      });\n    }\n  };\n\n  onStatusUpdate = async () => {\n    if (!this.props.onStatusUpdate) {\n      return;\n    }\n    const nativeEvent = await ExponentAV.getStatusForVideo(this._video);\n    this.props.onStatusUpdate({ nativeEvent });\n  };\n\n  onLoadStart = () => {\n    if (!this.props.onLoadStart) {\n      return;\n    }\n    this.props.onLoadStart();\n    this.onStatusUpdate();\n  };\n\n  onLoadedData = (event) => {\n    if (!this.props.onLoad) {\n      return;\n    }\n    this.props.onLoad(event);\n    this.onStatusUpdate();\n  };\n\n  onError = (event) => {\n    if (!this.props.onError) {\n      return;\n    }\n    this.props.onError(event);\n    this.onStatusUpdate();\n  };\n\n  onProgress = () => {\n    this.onStatusUpdate();\n  };\n\n  onSeeking = () => {\n    this.onStatusUpdate();\n  };\n\n  onEnded = () => {\n    this.onStatusUpdate();\n  };\n\n  onLoadedMetadata = () => {\n    this.onStatusUpdate();\n  };\n\n  onCanPlay = (event) => {\n    if (!this.props.onReadyForDisplay) {\n      return;\n    }\n    this.props.onReadyForDisplay(event);\n    this.onStatusUpdate();\n  };\n\n  onStalled = () => {\n    this.onStatusUpdate();\n  };\n\n  onRef = (ref: HTMLVideoElement | null) => {\n    this._removeFullscreenListener?.();\n    if (ref) {\n      this._video = ref;\n      this._removeFullscreenListener = addFullscreenListener(this._video, this.onFullscreenChange);\n      this.onStatusUpdate();\n    } else {\n      this._removeFullscreenListener = undefined;\n    }\n  };\n\n  render() {\n    const { source, status = {}, resizeMode: objectFit, useNativeControls, style } = this.props;\n\n    const customStyle = {\n      position: undefined,\n      objectFit,\n      overflow: 'hidden',\n    };\n    return (\n      <Video\n        ref={this.onRef}\n        onLoadStart={this.onLoadStart}\n        onLoadedData={this.onLoadedData}\n        onError={this.onError}\n        onTimeUpdate={this.onProgress}\n        onSeeking={this.onSeeking}\n        onEnded={this.onEnded}\n        onLoadedMetadata={this.onLoadedMetadata}\n        onCanPlay={this.onCanPlay}\n        onStalled={this.onStalled}\n        src={source?.uri || undefined}\n        muted={status.isMuted}\n        loop={status.isLooping}\n        autoPlay={status.shouldPlay}\n        controls={useNativeControls}\n        style={[style, customStyle]}\n        playsInline\n      />\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}