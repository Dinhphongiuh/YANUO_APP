{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport RNFlatList from \"react-native-web/dist/exports/FlatList\";\nimport RNSwitch from \"react-native-web/dist/exports/Switch\";\nimport RNTextInput from \"react-native-web/dist/exports/TextInput\";\nimport RNScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport createNativeWrapper from '../handlers/createNativeWrapper';\nexport const ScrollView = createNativeWrapper(RNScrollView, {\n  disallowInterruption: false\n});\nexport const Switch = createNativeWrapper(RNSwitch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true\n});\nexport const TextInput = createNativeWrapper(RNTextInput);\nexport const DrawerLayoutAndroid = () => {\n  console.warn('DrawerLayoutAndroid is not supported on web!');\n  return React.createElement(View, null);\n};\nexport const RefreshControl = createNativeWrapper(View);\nexport const FlatList = React.forwardRef((props, ref) => React.createElement(RNFlatList, _extends({\n  ref: ref\n}, props, {\n  renderScrollComponent: scrollProps => React.createElement(ScrollView, scrollProps)\n})));","map":{"version":3,"names":["React","RNFlatList","RNSwitch","RNTextInput","RNScrollView","View","createNativeWrapper","ScrollView","disallowInterruption","Switch","shouldCancelWhenOutside","shouldActivateOnStart","TextInput","DrawerLayoutAndroid","console","warn","createElement","RefreshControl","FlatList","forwardRef","props","ref","_extends","renderScrollComponent","scrollProps"],"sources":["C:\\Users\\DinhPhongIUH\\Desktop\\nhap\\Yanuo_mobile_Redux\\node_modules\\react-native-gesture-handler\\lib\\module\\components\\GestureComponents.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  FlatList as RNFlatList,\n  Switch as RNSwitch,\n  TextInput as RNTextInput,\n  ScrollView as RNScrollView,\n  FlatListProps,\n  View,\n} from 'react-native';\n\nimport createNativeWrapper from '../handlers/createNativeWrapper';\n\nexport const ScrollView = createNativeWrapper(RNScrollView, {\n  disallowInterruption: false,\n});\n\nexport const Switch = createNativeWrapper(RNSwitch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true,\n});\nexport const TextInput = createNativeWrapper(RNTextInput);\nexport const DrawerLayoutAndroid = () => {\n  console.warn('DrawerLayoutAndroid is not supported on web!');\n  return <View />;\n};\n\n// RefreshControl is implemented as a functional component, rendering a View\n// NativeViewGestureHandler needs to set a ref on its child, which cannot be done\n// on functional components\nexport const RefreshControl = createNativeWrapper(View);\n\nexport const FlatList = React.forwardRef(\n  <ItemT extends any>(props: FlatListProps<ItemT>, ref: any) => (\n    <RNFlatList\n      ref={ref}\n      {...props}\n      renderScrollComponent={(scrollProps) => <ScrollView {...scrollProps} />}\n    />\n  )\n);\n"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,WAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,IAAA;AAUA,OAAOC,mBAAP,MAAgC,iCAAhC;AAEA,OAAO,MAAMC,UAAU,GAAGD,mBAAmB,CAACF,YAAD,EAAe;EAC1DI,oBAAoB,EAAE;AADoC,CAAf,CAAtC;AAIP,OAAO,MAAMC,MAAM,GAAGH,mBAAmB,CAACJ,QAAD,EAAW;EAClDQ,uBAAuB,EAAE,KADyB;EAElDC,qBAAqB,EAAE,IAF2B;EAGlDH,oBAAoB,EAAE;AAH4B,CAAX,CAAlC;AAKP,OAAO,MAAMI,SAAS,GAAGN,mBAAmB,CAACH,WAAD,CAArC;AACP,OAAO,MAAMU,mBAAmB,GAAGA,CAAA,KAAM;EACvCC,OAAO,CAACC,IAAR,CAAa,8CAAb;EACA,OAAOf,KAAA,CAAAgB,aAAA,CAACX,IAAD,OAAP;AACD,CAHM;AAQP,OAAO,MAAMY,cAAc,GAAGX,mBAAmB,CAACD,IAAD,CAA1C;AAEP,OAAO,MAAMa,QAAQ,GAAGlB,KAAK,CAACmB,UAAN,CACtB,CAAoBC,KAApB,EAAiDC,GAAjD,KACErB,KAAA,CAAAgB,aAAA,CAACf,UAAD,EAAAqB,QAAA;EACED,GAAG,EAAEA;AADP,GAEMD,KAFN;EAGEG,qBAAqB,EAAGC,WAAD,IAAiBxB,KAAA,CAAAgB,aAAA,CAACT,UAAD,EAAgBiB,WAAhB;AAH1C,GAFoB,CAAjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}