{"ast":null,"code":"import axios from 'axios';\nimport queryString from 'query-string';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { REACT_APP_API_URL } from '../constants/index';\nimport { disconnect } from '../utils/socketClient';\nimport commonFuc from '../utils/commonFuc';\nconst axiosClient = axios.create({\n  baseURL: REACT_APP_API_URL,\n  headers: {\n    'content-type': 'application/json'\n  },\n  paramsSerializer: params => queryString.stringify(params)\n});\nexport default axiosClient;","map":{"version":3,"names":["axios","queryString","AsyncStorage","REACT_APP_API_URL","disconnect","commonFuc","axiosClient","create","baseURL","headers","paramsSerializer","params","stringify"],"sources":["C:/Users/DinhPhongIUH/Desktop/nhap/Yanuo_mobile_Redux/api/axiosClient.js"],"sourcesContent":["import axios from 'axios';\r\nimport queryString from 'query-string';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport {REACT_APP_API_URL} from '../constants/index';\r\nimport { disconnect } from '../utils/socketClient';\r\nimport commonFuc from '../utils/commonFuc';\r\n\r\nconst axiosClient = axios.create({\r\n    baseURL: REACT_APP_API_URL,\r\n    headers: {\r\n        'content-type': 'application/json',\r\n    },\r\n    paramsSerializer: params => queryString.stringify(params),\r\n});\r\n\r\n// axiosClient.interceptors.request.use(async config => {\r\n//     const token = await AsyncStorage.getItem('token');\r\n//     if (token)\r\n//     {\r\n//         config.headers.Authorization = `Bears ${token}`;\r\n//     }\r\n//     return config;\r\n// });\r\n\r\n// axiosClient.interceptors.response.use(\r\n//     response => {\r\n//         if (response && response.data)\r\n//         {\r\n//             const {code, auto} = response.data;\r\n\r\n//             if (code === 401)\r\n//             {\r\n//                 if (auto === 'yes')\r\n//                 {\r\n//                     return refreshToken().then(async response => {\r\n//                         const {token} = response.data;\r\n//                         await AsyncStorage.setItem('token', token);\r\n//                         axiosClient.setToken(token);\r\n\r\n//                         const config = response.config;\r\n//                         config.headers['X-access-token'] = token;\r\n//                         config.baseURL = REACT_APP_API_URL;\r\n//                         return axiosClient(config);\r\n//                     });\r\n//                 }\r\n//             }\r\n//             return response.data;\r\n//         }\r\n//         return response;\r\n//     },\r\n\r\n//     error => {\r\n//         console.log(error.response);\r\n//         if (error.response.status === 401)\r\n//         {\r\n//             AsyncStorage.removeItem('token');\r\n//             AsyncStorage.removeItem('refreshToken');\r\n//             AsyncStorage.removeItem('userId');\r\n//             disconnect();\r\n//             commonFuc.notifyMessage('Phiên hết hạn, vui lòng đăng nhập lại');\r\n//         }\r\n//         throw error;\r\n//     },\r\n// );  \r\n\r\n// async function refreshToken()\r\n// {\r\n//     const refreshToken = await AsyncStorage.getItem('refreshToken');\r\n//     return axiosClient.post('/auth/refresh-token', {\r\n//         refreshToken,\r\n//     });\r\n// }\r\n\r\nexport default axiosClient;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAOC,YAAY,MAAM,2CAA2C;AACpE,SAAQC,iBAAiB,QAAO,oBAAoB;AACpD,SAASC,UAAU,QAAQ,uBAAuB;AAClD,OAAOC,SAAS,MAAM,oBAAoB;AAE1C,MAAMC,WAAW,GAAGN,KAAK,CAACO,MAAM,CAAC;EAC7BC,OAAO,EAAEL,iBAAiB;EAC1BM,OAAO,EAAE;IACL,cAAc,EAAE;EACpB,CAAC;EACDC,gBAAgB,EAAEC,MAAM,IAAIV,WAAW,CAACW,SAAS,CAACD,MAAM;AAC5D,CAAC,CAAC;AA4DF,eAAeL,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}