{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { BaseGesture } from './gesture';\nexport class FlingGesture extends BaseGesture {\n  constructor() {\n    super();\n    _defineProperty(this, \"config\", {});\n    this.handlerName = 'FlingGestureHandler';\n  }\n  numberOfPointers(pointers) {\n    this.config.numberOfPointers = pointers;\n    return this;\n  }\n  direction(direction) {\n    this.config.direction = direction;\n    return this;\n  }\n}","map":{"version":3,"names":["BaseGesture","FlingGesture","constructor","_defineProperty","handlerName","numberOfPointers","pointers","config","direction"],"sources":["C:\\Users\\DinhPhongIUH\\Desktop\\nhap\\Yanuo_mobile_Redux\\node_modules\\react-native-gesture-handler\\lib\\module\\handlers\\gestures\\flingGesture.ts"],"sourcesContent":["import { BaseGesture, BaseGestureConfig } from './gesture';\nimport {\n  FlingGestureConfig,\n  FlingGestureHandlerEventPayload,\n} from '../FlingGestureHandler';\n\nexport class FlingGesture extends BaseGesture<FlingGestureHandlerEventPayload> {\n  public config: BaseGestureConfig & FlingGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'FlingGestureHandler';\n  }\n\n  /**\n   * Determine exact number of points required to handle the fling gesture.\n   * @param pointers\n   */\n  numberOfPointers(pointers: number) {\n    this.config.numberOfPointers = pointers;\n    return this;\n  }\n\n  /**\n   * Expressed allowed direction of movement.\n   * Expected values are exported as constants in the Directions object.\n   * Arguments can be combined using `|` operator. Default value is set to `MouseButton.LEFT`.\n   * @param direction\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/fling-gesture/#directionvalue-directions\n   */\n  direction(direction: number) {\n    this.config.direction = direction;\n    return this;\n  }\n}\n\nexport type FlingGestureType = InstanceType<typeof FlingGesture>;\n"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,WAAT,QAA+C,WAA/C;AAMA,OAAO,MAAMC,YAAN,SAA2BD,WAA3B,CAAwE;EAG7EE,WAAWA,CAAA,EAAG;IACZ;IADYC,eAAA,iBAF0C,EAE1C;IAGZ,KAAKC,WAAL,GAAmB,qBAAnB;EACD;EAMDC,gBAAgBA,CAACC,QAAD,EAAmB;IACjC,KAAKC,MAAL,CAAYF,gBAAZ,GAA+BC,QAA/B;IACA,OAAO,IAAP;EACD;EASDE,SAASA,CAACA,SAAD,EAAoB;IAC3B,KAAKD,MAAL,CAAYC,SAAZ,GAAwBA,SAAxB;IACA,OAAO,IAAP;EACD;AA5B4E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}