{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DinhPhongIUH\\\\Desktop\\\\nhap\\\\Yanuo_mobile_Redux\\\\screens\\\\chatController\\\\ViewMediaChat.js\";\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Video } from 'expo-av';\nimport * as FileSystem from 'expo-file-system';\nimport * as MediaLibrary from 'expo-media-library';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App({\n  navigation,\n  route\n}) {\n  const uri = route.params;\n  console.log(uri);\n  const isImage = uri => {\n    return uri.match(/\\.(jpeg|jpg|gif|png|bmp|heic)$/i);\n  };\n  const isVideo = uri => {\n    return uri.match(/\\.(mp4|avi|mov|wmv|flv)$/i);\n  };\n  const VideoRef = useRef(null);\n  const downloadVideo = async videoUrl => {\n    let fileUri = FileSystem.documentDirectory + 'video.mp4';\n    console.log(fileUri);\n    try {\n      const res = await FileSystem.downloadAsync(videoUrl, fileUri);\n      const asset = await MediaLibrary.createAssetAsync(res.uri);\n      const album = await MediaLibrary.getAlbumAsync('Download');\n      if (album == null) {\n        await MediaLibrary.createAlbumAsync('Download', asset, false);\n      } else {\n        await MediaLibrary.addAssetsToAlbumAsync([asset], album, false);\n      }\n      alert('Video downloaded successfully');\n      console.log('success');\n    } catch (error) {\n      console.error('Error downloading video:', error);\n    }\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: {\n        width: '100%',\n        height: 50\n      },\n      children: _jsxDEV(TouchableOpacity, {\n        onPress: () => downloadVideo(uri),\n        children: _jsxDEV(Text, {\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), isImage(uri) && _jsxDEV(Image, {\n      source: {\n        uri\n      },\n      resizeMode: \"contain\",\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), isVideo(uri) && _jsxDEV(Video, {\n      ref: VideoRef,\n      source: {\n        uri: uri\n      },\n      useNativeControls: true,\n      resizeMode: \"cover\",\n      isLooping: true,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      shouldPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","StyleSheet","Text","View","Image","TouchableOpacity","SafeAreaView","Dimensions","Animated","TouchableWithoutFeedback","ScrollView","PanResponder","ActivityIndicator","Modal","TextInput","Video","FileSystem","MediaLibrary","jsxDEV","_jsxDEV","App","navigation","route","uri","params","console","log","isImage","match","isVideo","VideoRef","downloadVideo","videoUrl","fileUri","documentDirectory","res","downloadAsync","asset","createAssetAsync","album","getAlbumAsync","createAlbumAsync","addAssetsToAlbumAsync","alert","error","style","styles","container","children","width","height","onPress","fileName","_jsxFileName","lineNumber","columnNumber","source","resizeMode","ref","useNativeControls","isLooping","shouldPlay","create","flex"],"sources":["C:/Users/DinhPhongIUH/Desktop/nhap/Yanuo_mobile_Redux/screens/chatController/ViewMediaChat.js"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport { StyleSheet, Text, View, Image, TouchableOpacity, SafeAreaView, Dimensions, Animated, TouchableWithoutFeedback, ScrollView, PanResponder, ActivityIndicator, Modal, TextInput,} from 'react-native';\r\nimport {Video} from 'expo-av';\r\nimport * as FileSystem from 'expo-file-system';\r\nimport * as MediaLibrary from 'expo-media-library';\r\n\r\nexport default function App({navigation, route}) {\r\n    const uri = route.params;\r\n    console.log(uri);\r\n\r\n    // Hàm kiểm tra định dạng file\r\n    const isImage = (uri) => {\r\n        return uri.match(/\\.(jpeg|jpg|gif|png|bmp|heic)$/i);\r\n    };\r\n\r\n    const isVideo = (uri) => {\r\n        return uri.match(/\\.(mp4|avi|mov|wmv|flv)$/i);\r\n    };\r\n    const VideoRef = useRef(null);\r\n\r\n    const downloadVideo = async (videoUrl) => {\r\n        let fileUri = FileSystem.documentDirectory + 'video.mp4';\r\n        console.log(fileUri);\r\n        try {\r\n          const res = await FileSystem.downloadAsync(videoUrl, fileUri);\r\n          const asset = await MediaLibrary.createAssetAsync(res.uri);\r\n          const album = await MediaLibrary.getAlbumAsync('Download');\r\n          if (album == null) {\r\n            await MediaLibrary.createAlbumAsync('Download', asset, false);\r\n          } else {\r\n            await MediaLibrary.addAssetsToAlbumAsync([asset], album, false);\r\n          }\r\n          alert('Video downloaded successfully');\r\n          console.log('success')\r\n        } catch (error) {\r\n          console.error('Error downloading video:', error);\r\n        }\r\n      };\r\n\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n            <View style={{width: '100%', height: 50}}>\r\n                <TouchableOpacity\r\n                    onPress={() => downloadVideo(uri)}\r\n                >\r\n                    <Text>Download</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            {isImage(uri) && \r\n            <Image\r\n                source={{uri}}\r\n                resizeMode='contain'\r\n                style={{width: '100%', height: '100%'}}\r\n            ></Image>}\r\n            {isVideo(uri) && (\r\n                // Sử dụng thư viện thích hợp để hiển thị video, ví dụ: react-native-video\r\n                <Video \r\n                    ref={VideoRef}\r\n                    source={{ uri: uri }} \r\n                    useNativeControls\r\n                    resizeMode = 'cover' \r\n                    isLooping\r\n                    style={{width: '100%', height: '100%'}}\r\n                    shouldPlay\r\n                >\r\n                </Video>\r\n            )}\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    }\r\n})"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}