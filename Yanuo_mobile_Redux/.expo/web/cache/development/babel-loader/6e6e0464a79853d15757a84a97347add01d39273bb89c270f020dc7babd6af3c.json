{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nexport const camelCase = value => value.replace(/-([a-z])/g, g => g[1].toUpperCase());\nexport const camelCaseNodeName = ({\n  nodeName,\n  nodeValue\n}) => ({\n  nodeName: camelCase(nodeName),\n  nodeValue\n});\nexport const removePixelsFromNodeValue = ({\n  nodeName,\n  nodeValue\n}) => ({\n  nodeName,\n  nodeValue: nodeValue.replace('px', '')\n});\nexport const transformStyle = ({\n  nodeName,\n  nodeValue,\n  fillProp\n}) => {\n  if (nodeName === 'style') {\n    return nodeValue.split(';').reduce((acc, attribute) => {\n      const [property, value] = attribute.split(':');\n      if (property == \"\") return acc;else return _objectSpread(_objectSpread({}, acc), {}, {\n        [camelCase(property)]: fillProp && property === 'fill' ? fillProp : value\n      });\n    }, {});\n  }\n  return null;\n};\nexport const getEnabledAttributes = enabledAttributes => ({\n  nodeName\n}) => enabledAttributes.includes(camelCase(nodeName));","map":{"version":3,"names":["camelCase","value","replace","g","toUpperCase","camelCaseNodeName","nodeName","nodeValue","removePixelsFromNodeValue","transformStyle","fillProp","split","reduce","acc","attribute","property","_objectSpread","getEnabledAttributes","enabledAttributes","includes"],"sources":["C:/Users/DinhPhongIUH/Desktop/nhap/Yanuo_mobile_Redux/node_modules/react-native-svg-uri/utils.js"],"sourcesContent":["export const camelCase = value => value.replace(/-([a-z])/g, g => g[1].toUpperCase());\n\nexport const camelCaseNodeName = ({nodeName, nodeValue}) => ({nodeName: camelCase(nodeName), nodeValue});\n\nexport const removePixelsFromNodeValue = ({nodeName, nodeValue}) => ({nodeName, nodeValue: nodeValue.replace('px', '')});\n\nexport const transformStyle = ({nodeName, nodeValue, fillProp}) => {\n  if (nodeName === 'style') {\n    return nodeValue.split(';')\n      .reduce((acc, attribute) => {\n        const [property, value] = attribute.split(':');\n        if (property == \"\")\n            return acc;\n        else\n            return {...acc, [camelCase(property)]: fillProp && property === 'fill' ? fillProp : value};\n      }, {});\n  }\n  return null;\n};\n\nexport const getEnabledAttributes = enabledAttributes => ({nodeName}) => enabledAttributes.includes(camelCase(nodeName));\n"],"mappings":";;;AAAA,OAAO,MAAMA,SAAS,GAAGC,KAAK,IAAIA,KAAK,CAACC,OAAO,CAAC,WAAW,EAAEC,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;AAErF,OAAO,MAAMC,iBAAiB,GAAGA,CAAC;EAACC,QAAQ;EAAEC;AAAS,CAAC,MAAM;EAACD,QAAQ,EAAEN,SAAS,CAACM,QAAQ,CAAC;EAAEC;AAAS,CAAC,CAAC;AAExG,OAAO,MAAMC,yBAAyB,GAAGA,CAAC;EAACF,QAAQ;EAAEC;AAAS,CAAC,MAAM;EAACD,QAAQ;EAAEC,SAAS,EAAEA,SAAS,CAACL,OAAO,CAAC,IAAI,EAAE,EAAE;AAAC,CAAC,CAAC;AAExH,OAAO,MAAMO,cAAc,GAAGA,CAAC;EAACH,QAAQ;EAAEC,SAAS;EAAEG;AAAQ,CAAC,KAAK;EACjE,IAAIJ,QAAQ,KAAK,OAAO,EAAE;IACxB,OAAOC,SAAS,CAACI,KAAK,CAAC,GAAG,CAAC,CACxBC,MAAM,CAAC,CAACC,GAAG,EAAEC,SAAS,KAAK;MAC1B,MAAM,CAACC,QAAQ,EAAEd,KAAK,CAAC,GAAGa,SAAS,CAACH,KAAK,CAAC,GAAG,CAAC;MAC9C,IAAII,QAAQ,IAAI,EAAE,EACd,OAAOF,GAAG,CAAC,KAEX,OAAAG,aAAA,CAAAA,aAAA,KAAWH,GAAG;QAAE,CAACb,SAAS,CAACe,QAAQ,CAAC,GAAGL,QAAQ,IAAIK,QAAQ,KAAK,MAAM,GAAGL,QAAQ,GAAGT;MAAK;IAC/F,CAAC,EAAE,CAAC,CAAC,CAAC;EACV;EACA,OAAO,IAAI;AACb,CAAC;AAED,OAAO,MAAMgB,oBAAoB,GAAGC,iBAAiB,IAAI,CAAC;EAACZ;AAAQ,CAAC,KAAKY,iBAAiB,CAACC,QAAQ,CAACnB,SAAS,CAACM,QAAQ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}