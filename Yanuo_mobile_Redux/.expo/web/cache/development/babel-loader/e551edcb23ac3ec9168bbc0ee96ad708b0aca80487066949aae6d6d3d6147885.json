{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nconst _excluded = [\"transform\", \"origin\", \"originX\", \"originY\", \"fontFamily\", \"fontSize\", \"fontWeight\", \"fontStyle\", \"style\", \"forwardedRef\", \"gradientTransform\", \"patternTransform\"],\n  _excluded2 = [\"x\", \"y\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as React from 'react';\nimport createElement from \"react-native-web/dist/exports/createElement\";\nimport SvgTouchableMixin from './lib/SvgTouchableMixin';\nimport { resolve } from './lib/resolve';\nimport { transformsArrayToProps } from './lib/extract/extractTransform';\nconst hasTouchableProperty = props => props.onPress || props.onPressIn || props.onPressOut || props.onLongPress;\nconst camelCaseToDashed = camelCase => {\n  return camelCase.replace(/[A-Z]/g, m => '-' + m.toLowerCase());\n};\nfunction stringifyTransformProps(transformProps) {\n  const transformArray = [];\n  if (transformProps.translate != null) {\n    transformArray.push(`translate(${transformProps.translate})`);\n  }\n  if (transformProps.translateX != null || transformProps.translateY != null) {\n    transformArray.push(`translate(${transformProps.translateX || 0}, ${transformProps.translateY || 0})`);\n  }\n  if (transformProps.scale != null) {\n    transformArray.push(`scale(${transformProps.scale})`);\n  }\n  if (transformProps.scaleX != null || transformProps.scaleY != null) {\n    transformArray.push(`scale(${transformProps.scaleX || 1}, ${transformProps.scaleY || 1})`);\n  }\n  if (transformProps.rotation != null) {\n    transformArray.push(`rotate(${transformProps.rotation})`);\n  }\n  if (transformProps.skewX != null) {\n    transformArray.push(`skewX(${transformProps.skewX})`);\n  }\n  if (transformProps.skewY != null) {\n    transformArray.push(`skewY(${transformProps.skewY})`);\n  }\n  return transformArray;\n}\nfunction parseTransformProp(transform, props) {\n  const transformArray = [];\n  props && transformArray.push(...stringifyTransformProps(props));\n  if (Array.isArray(transform)) {\n    if (typeof transform[0] === 'number') {\n      transformArray.push(`matrix(${transform.join(' ')})`);\n    } else {\n      const stringifiedProps = transformsArrayToProps(transform);\n      transformArray.push(...stringifyTransformProps(stringifiedProps));\n    }\n  } else if (typeof transform === 'string') {\n    transformArray.push(transform);\n  }\n  return transformArray.length ? transformArray.join(' ') : undefined;\n}\nconst prepare = function (self) {\n  let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : self.props;\n  const {\n      transform,\n      origin,\n      originX,\n      originY,\n      fontFamily,\n      fontSize,\n      fontWeight,\n      fontStyle,\n      style,\n      forwardedRef,\n      gradientTransform,\n      patternTransform\n    } = props,\n    rest = _objectWithoutProperties(props, _excluded);\n  const clean = _objectSpread(_objectSpread({}, hasTouchableProperty(props) ? {\n    onStartShouldSetResponder: self.touchableHandleStartShouldSetResponder,\n    onResponderTerminationRequest: self.touchableHandleResponderTerminationRequest,\n    onResponderGrant: self.touchableHandleResponderGrant,\n    onResponderMove: self.touchableHandleResponderMove,\n    onResponderRelease: self.touchableHandleResponderRelease,\n    onResponderTerminate: self.touchableHandleResponderTerminate\n  } : null), rest);\n  if (origin != null) {\n    clean['transform-origin'] = origin.toString().replace(',', ' ');\n  } else if (originX != null || originY != null) {\n    clean['transform-origin'] = `${originX || 0} ${originY || 0}`;\n  }\n  const parsedTransform = parseTransformProp(transform, props);\n  if (parsedTransform) {\n    clean.transform = parsedTransform;\n  }\n  const parsedGradientTransform = parseTransformProp(gradientTransform);\n  if (parsedGradientTransform) {\n    clean.gradientTransform = parsedGradientTransform;\n  }\n  const parsedPatternTransform = parseTransformProp(patternTransform);\n  if (parsedPatternTransform) {\n    clean.patternTransform = parsedPatternTransform;\n  }\n  clean.ref = el => {\n    self.elementRef.current = el;\n    if (typeof forwardedRef === 'function') {\n      forwardedRef(el);\n    } else if (forwardedRef) {\n      forwardedRef.current = el;\n    }\n  };\n  const styles = {};\n  if (fontFamily != null) {\n    styles.fontFamily = fontFamily;\n  }\n  if (fontSize != null) {\n    styles.fontSize = fontSize;\n  }\n  if (fontWeight != null) {\n    styles.fontWeight = fontWeight;\n  }\n  if (fontStyle != null) {\n    styles.fontStyle = fontStyle;\n  }\n  clean.style = resolve(style, styles);\n  return clean;\n};\nconst getBoundingClientRect = node => {\n  if (node) {\n    const isElement = node.nodeType === 1;\n    if (isElement && typeof node.getBoundingClientRect === 'function') {\n      return node.getBoundingClientRect();\n    }\n  }\n  throw new Error('Can not get boundingClientRect of ' + node || 'undefined');\n};\nconst measureLayout = (node, callback) => {\n  const relativeNode = node === null || node === void 0 ? void 0 : node.parentNode;\n  if (relativeNode) {\n    setTimeout(() => {\n      const relativeRect = getBoundingClientRect(relativeNode);\n      const {\n        height,\n        left,\n        top,\n        width\n      } = getBoundingClientRect(node);\n      const x = left - relativeRect.left;\n      const y = top - relativeRect.top;\n      callback(x, y, width, height, left, top);\n    }, 0);\n  }\n};\nfunction remeasure() {\n  const tag = this.state.touchable.responderID;\n  if (tag === null) {\n    return;\n  }\n  measureLayout(tag, this._handleQueryLayout);\n}\nexport class WebShape extends React.Component {\n  prepareProps(props) {\n    return props;\n  }\n  elementRef = React.createRef();\n  lastMergedProps = {};\n  setNativeProps(props) {\n    const merged = Object.assign({}, this.props, this.lastMergedProps, props.style);\n    this.lastMergedProps = merged;\n    const clean = prepare(this, this.prepareProps(merged));\n    const current = this.elementRef.current;\n    if (current) {\n      for (const cleanAttribute of Object.keys(clean)) {\n        const cleanValue = clean[cleanAttribute];\n        switch (cleanAttribute) {\n          case 'ref':\n          case 'children':\n            break;\n          case 'style':\n            for (const partialStyle of [].concat(clean.style ?? [])) {\n              Object.assign(current.style, partialStyle);\n            }\n            break;\n          default:\n            current.setAttribute(camelCaseToDashed(cleanAttribute), cleanValue);\n            break;\n        }\n      }\n    }\n  }\n  constructor(props) {\n    super(props);\n    if (hasTouchableProperty(props)) {\n      SvgTouchableMixin(this);\n    }\n    this._remeasureMetricsOnActivation = remeasure.bind(this);\n  }\n  render() {\n    if (!this.tag) {\n      throw new Error('When extending `WebShape` you need to overwrite either `tag` or `render`!');\n    }\n    this.lastMergedProps = {};\n    return createElement(this.tag, prepare(this, this.prepareProps(this.props)));\n  }\n}\nexport class Circle extends WebShape {\n  tag = 'circle';\n}\nexport class ClipPath extends WebShape {\n  tag = 'clipPath';\n}\nexport class Defs extends WebShape {\n  tag = 'defs';\n}\nexport class Ellipse extends WebShape {\n  tag = 'ellipse';\n}\nexport class G extends WebShape {\n  tag = 'g';\n  prepareProps(props) {\n    const {\n        x,\n        y\n      } = props,\n      rest = _objectWithoutProperties(props, _excluded2);\n    if ((x || y) && !rest.translate) {\n      rest.translate = `${x || 0}, ${y || 0}`;\n    }\n    return rest;\n  }\n}\nexport class Image extends WebShape {\n  tag = 'image';\n}\nexport class Line extends WebShape {\n  tag = 'line';\n}\nexport class LinearGradient extends WebShape {\n  tag = 'linearGradient';\n}\nexport class Path extends WebShape {\n  tag = 'path';\n}\nexport class Polygon extends WebShape {\n  tag = 'polygon';\n}\nexport class Polyline extends WebShape {\n  tag = 'polyline';\n}\nexport class RadialGradient extends WebShape {\n  tag = 'radialGradient';\n}\nexport class Rect extends WebShape {\n  tag = 'rect';\n}\nexport class Stop extends WebShape {\n  tag = 'stop';\n}\nfunction encodeSvg(svgString) {\n  return svgString.replace('<svg', ~svgString.indexOf('xmlns') ? '<svg' : '<svg xmlns=\"http://www.w3.org/2000/svg\"').replace(/\"/g, \"'\").replace(/%/g, '%25').replace(/#/g, '%23').replace(/{/g, '%7B').replace(/}/g, '%7D').replace(/</g, '%3C').replace(/>/g, '%3E').replace(/\\s+/g, ' ');\n}\nexport class Svg extends WebShape {\n  tag = 'svg';\n  toDataURL(callback) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const ref = this.elementRef.current;\n    if (ref === null) {\n      return;\n    }\n    const rect = getBoundingClientRect(ref);\n    const width = Number(options.width) || rect.width;\n    const height = Number(options.height) || rect.height;\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttribute('viewBox', `0 0 ${rect.width} ${rect.height}`);\n    svg.setAttribute('width', String(width));\n    svg.setAttribute('height', String(height));\n    svg.appendChild(ref.cloneNode(true));\n    const img = new window.Image();\n    img.onload = () => {\n      const canvas = document.createElement('canvas');\n      canvas.width = width;\n      canvas.height = height;\n      const context = canvas.getContext('2d');\n      context === null || context === void 0 ? void 0 : context.drawImage(img, 0, 0);\n      callback(canvas.toDataURL().replace('data:image/png;base64,', ''));\n    };\n    img.src = `data:image/svg+xml;utf8,${encodeSvg(new window.XMLSerializer().serializeToString(svg))}`;\n  }\n}\nexport class Symbol extends WebShape {\n  tag = 'symbol';\n}\nexport class Text extends WebShape {\n  tag = 'text';\n}\nexport class TSpan extends WebShape {\n  tag = 'tspan';\n}\nexport class TextPath extends WebShape {\n  tag = 'textPath';\n}\nexport class Use extends WebShape {\n  tag = 'use';\n}\nexport class Mask extends WebShape {\n  tag = 'mask';\n}\nexport class ForeignObject extends WebShape {\n  tag = 'foreignObject';\n}\nexport class Marker extends WebShape {\n  tag = 'marker';\n}\nexport class Pattern extends WebShape {\n  tag = 'pattern';\n}\nexport default Svg;","map":{"version":3,"names":["React","createElement","SvgTouchableMixin","resolve","transformsArrayToProps","hasTouchableProperty","props","onPress","onPressIn","onPressOut","onLongPress","camelCaseToDashed","camelCase","replace","m","toLowerCase","stringifyTransformProps","transformProps","transformArray","translate","push","translateX","translateY","scale","scaleX","scaleY","rotation","skewX","skewY","parseTransformProp","transform","Array","isArray","join","stringifiedProps","length","undefined","prepare","self","arguments","origin","originX","originY","fontFamily","fontSize","fontWeight","fontStyle","style","forwardedRef","gradientTransform","patternTransform","rest","_objectWithoutProperties","_excluded","clean","_objectSpread","onStartShouldSetResponder","touchableHandleStartShouldSetResponder","onResponderTerminationRequest","touchableHandleResponderTerminationRequest","onResponderGrant","touchableHandleResponderGrant","onResponderMove","touchableHandleResponderMove","onResponderRelease","touchableHandleResponderRelease","onResponderTerminate","touchableHandleResponderTerminate","toString","parsedTransform","parsedGradientTransform","parsedPatternTransform","ref","el","elementRef","current","styles","getBoundingClientRect","node","isElement","nodeType","Error","measureLayout","callback","relativeNode","parentNode","setTimeout","relativeRect","height","left","top","width","x","y","remeasure","tag","state","touchable","responderID","_handleQueryLayout","WebShape","Component","prepareProps","createRef","lastMergedProps","setNativeProps","merged","Object","assign","cleanAttribute","keys","cleanValue","partialStyle","concat","setAttribute","constructor","_remeasureMetricsOnActivation","bind","render","Circle","ClipPath","Defs","Ellipse","G","_excluded2","Image","Line","LinearGradient","Path","Polygon","Polyline","RadialGradient","Rect","Stop","encodeSvg","svgString","indexOf","Svg","toDataURL","options","rect","Number","svg","document","createElementNS","String","appendChild","cloneNode","img","window","onload","canvas","context","getContext","drawImage","src","XMLSerializer","serializeToString","Symbol","Text","TSpan","TextPath","Use","Mask","ForeignObject","Marker","Pattern"],"sources":["C:\\Users\\DinhPhongIUH\\Desktop\\nhap\\Yanuo_mobile_Redux\\node_modules\\react-native-svg\\src\\ReactNativeSVG.web.ts"],"sourcesContent":["import * as React from 'react';\nimport type { CircleProps } from './elements/Circle';\nimport type { ClipPathProps } from './elements/ClipPath';\nimport type { EllipseProps } from './elements/Ellipse';\nimport type { ForeignObjectProps } from './elements/ForeignObject';\nimport type { GProps } from './elements/G';\nimport type { ImageProps } from './elements/Image';\nimport type { LineProps } from './elements/Line';\nimport type { LinearGradientProps } from './elements/LinearGradient';\nimport type { MarkerProps } from './elements/Marker';\nimport type { MaskProps } from './elements/Mask';\nimport type { PathProps } from './elements/Path';\nimport type { PatternProps } from './elements/Pattern';\nimport type { PolygonProps } from './elements/Polygon';\nimport type { PolylineProps } from './elements/Polyline';\nimport type { RadialGradientProps } from './elements/RadialGradient';\nimport type { RectProps } from './elements/Rect';\nimport type { StopProps } from './elements/Stop';\nimport type { SvgProps } from './elements/Svg';\nimport type { SymbolProps } from './elements/Symbol';\nimport type { TextProps } from './elements/Text';\nimport type { TextPathProps } from './elements/TextPath';\nimport type { TSpanProps } from './elements/TSpan';\nimport type { UseProps } from './elements/Use';\nimport type { GestureResponderEvent, TransformsStyle } from 'react-native';\nimport {\n  // @ts-ignore it is not seen in exports\n  unstable_createElement as createElement,\n} from 'react-native';\nimport type {\n  NumberArray,\n  NumberProp,\n  TransformProps,\n} from './lib/extract/types';\nimport SvgTouchableMixin from './lib/SvgTouchableMixin';\nimport { resolve } from './lib/resolve';\nimport { transformsArrayToProps } from './lib/extract/extractTransform';\n\ntype BlurEvent = object;\ntype FocusEvent = object;\ntype PressEvent = object;\ntype LayoutEvent = object;\ntype EdgeInsetsProp = object;\n\ninterface BaseProps {\n  accessible?: boolean;\n  accessibilityLabel?: string;\n  accessibilityHint?: string;\n  accessibilityIgnoresInvertColors?: boolean;\n  accessibilityRole?: string;\n  accessibilityState?: object;\n  delayLongPress?: number;\n  delayPressIn?: number;\n  delayPressOut?: number;\n  disabled?: boolean;\n  hitSlop?: EdgeInsetsProp;\n  nativeID?: string;\n  touchSoundDisabled?: boolean;\n  onBlur?: (e: BlurEvent) => void;\n  onFocus?: (e: FocusEvent) => void;\n  onLayout?: (event: LayoutEvent) => object;\n  onLongPress?: (event: PressEvent) => object;\n  onClick?: (event: PressEvent) => object;\n  onPress?: (event: PressEvent) => object;\n  onPressIn?: (event: PressEvent) => object;\n  onPressOut?: (event: PressEvent) => object;\n  pressRetentionOffset?: EdgeInsetsProp;\n  rejectResponderTermination?: boolean;\n\n  transform?: TransformProps['transform'];\n  translate?: NumberArray;\n  translateX?: NumberProp;\n  translateY?: NumberProp;\n  scale?: NumberArray;\n  scaleX?: NumberProp;\n  scaleY?: NumberProp;\n  rotation?: NumberProp;\n  skewX?: NumberProp;\n  skewY?: NumberProp;\n  origin?: NumberArray;\n  originX?: NumberProp;\n  originY?: NumberProp;\n\n  fontStyle?: string;\n  fontWeight?: NumberProp;\n  fontSize?: NumberProp;\n  fontFamily?: string;\n  forwardedRef?:\n    | React.RefCallback<SVGElement>\n    | React.MutableRefObject<SVGElement | null>;\n  style?: Iterable<unknown>;\n\n  // different tranform props\n  gradientTransform?: TransformProps['transform'];\n  patternTransform?: TransformProps['transform'];\n}\n\nconst hasTouchableProperty = (props: BaseProps) =>\n  props.onPress || props.onPressIn || props.onPressOut || props.onLongPress;\n\nconst camelCaseToDashed = (camelCase: string) => {\n  return camelCase.replace(/[A-Z]/g, (m) => '-' + m.toLowerCase());\n};\n\nfunction stringifyTransformProps(transformProps: TransformProps) {\n  const transformArray = [];\n  if (transformProps.translate != null) {\n    transformArray.push(`translate(${transformProps.translate})`);\n  }\n  if (transformProps.translateX != null || transformProps.translateY != null) {\n    transformArray.push(\n      `translate(${transformProps.translateX || 0}, ${\n        transformProps.translateY || 0\n      })`\n    );\n  }\n  if (transformProps.scale != null) {\n    transformArray.push(`scale(${transformProps.scale})`);\n  }\n  if (transformProps.scaleX != null || transformProps.scaleY != null) {\n    transformArray.push(\n      `scale(${transformProps.scaleX || 1}, ${transformProps.scaleY || 1})`\n    );\n  }\n  // rotation maps to rotate, not to collide with the text rotate attribute (which acts per glyph rather than block)\n  if (transformProps.rotation != null) {\n    transformArray.push(`rotate(${transformProps.rotation})`);\n  }\n  if (transformProps.skewX != null) {\n    transformArray.push(`skewX(${transformProps.skewX})`);\n  }\n  if (transformProps.skewY != null) {\n    transformArray.push(`skewY(${transformProps.skewY})`);\n  }\n  return transformArray;\n}\n\nfunction parseTransformProp(\n  transform: TransformProps['transform'],\n  props?: BaseProps\n) {\n  const transformArray: string[] = [];\n\n  props && transformArray.push(...stringifyTransformProps(props));\n\n  if (Array.isArray(transform)) {\n    if (typeof transform[0] === 'number') {\n      transformArray.push(`matrix(${transform.join(' ')})`);\n    } else {\n      const stringifiedProps = transformsArrayToProps(\n        transform as TransformsStyle['transform']\n      );\n      transformArray.push(...stringifyTransformProps(stringifiedProps));\n    }\n  } else if (typeof transform === 'string') {\n    transformArray.push(transform);\n  }\n\n  return transformArray.length ? transformArray.join(' ') : undefined;\n}\n\n/**\n * `react-native-svg` supports additional props that aren't defined in the spec.\n * This function replaces them in a spec conforming manner.\n *\n * @param {WebShape} self Instance given to us.\n * @param {Object?} props Optional overridden props given to us.\n * @returns {Object} Cleaned props object.\n * @private\n */\nconst prepare = <T extends BaseProps>(\n  self: WebShape<T>,\n  props = self.props\n) => {\n  const {\n    transform,\n    origin,\n    originX,\n    originY,\n    fontFamily,\n    fontSize,\n    fontWeight,\n    fontStyle,\n    style,\n    forwardedRef,\n    gradientTransform,\n    patternTransform,\n    ...rest\n  } = props;\n\n  const clean: {\n    onStartShouldSetResponder?: (e: GestureResponderEvent) => boolean;\n    onResponderMove?: (e: GestureResponderEvent) => void;\n    onResponderGrant?: (e: GestureResponderEvent) => void;\n    onResponderRelease?: (e: GestureResponderEvent) => void;\n    onResponderTerminate?: (e: GestureResponderEvent) => void;\n    onResponderTerminationRequest?: (e: GestureResponderEvent) => boolean;\n    transform?: string;\n    gradientTransform?: string;\n    patternTransform?: string;\n    'transform-origin'?: string;\n    style?: object;\n    ref?: unknown;\n  } = {\n    ...(hasTouchableProperty(props)\n      ? {\n          onStartShouldSetResponder:\n            self.touchableHandleStartShouldSetResponder,\n          onResponderTerminationRequest:\n            self.touchableHandleResponderTerminationRequest,\n          onResponderGrant: self.touchableHandleResponderGrant,\n          onResponderMove: self.touchableHandleResponderMove,\n          onResponderRelease: self.touchableHandleResponderRelease,\n          onResponderTerminate: self.touchableHandleResponderTerminate,\n        }\n      : null),\n    ...rest,\n  };\n\n  if (origin != null) {\n    clean['transform-origin'] = origin.toString().replace(',', ' ');\n  } else if (originX != null || originY != null) {\n    clean['transform-origin'] = `${originX || 0} ${originY || 0}`;\n  }\n\n  // we do it like this because setting transform as undefined causes error in web\n  const parsedTransform = parseTransformProp(transform, props);\n  if (parsedTransform) {\n    clean.transform = parsedTransform;\n  }\n  const parsedGradientTransform = parseTransformProp(gradientTransform);\n  if (parsedGradientTransform) {\n    clean.gradientTransform = parsedGradientTransform;\n  }\n  const parsedPatternTransform = parseTransformProp(patternTransform);\n  if (parsedPatternTransform) {\n    clean.patternTransform = parsedPatternTransform;\n  }\n\n  clean.ref = (el: SVGElement | null) => {\n    self.elementRef.current = el;\n    if (typeof forwardedRef === 'function') {\n      forwardedRef(el);\n    } else if (forwardedRef) {\n      forwardedRef.current = el;\n    }\n  };\n\n  const styles: {\n    fontStyle?: string;\n    fontFamily?: string;\n    fontSize?: NumberProp;\n    fontWeight?: NumberProp;\n  } = {};\n\n  if (fontFamily != null) {\n    styles.fontFamily = fontFamily;\n  }\n  if (fontSize != null) {\n    styles.fontSize = fontSize;\n  }\n  if (fontWeight != null) {\n    styles.fontWeight = fontWeight;\n  }\n  if (fontStyle != null) {\n    styles.fontStyle = fontStyle;\n  }\n  clean.style = resolve(style, styles);\n\n  return clean;\n};\n\nconst getBoundingClientRect = (node: SVGElement) => {\n  if (node) {\n    const isElement = node.nodeType === 1; /* Node.ELEMENT_NODE */\n    if (isElement && typeof node.getBoundingClientRect === 'function') {\n      return node.getBoundingClientRect();\n    }\n  }\n  throw new Error('Can not get boundingClientRect of ' + node || 'undefined');\n};\n\nconst measureLayout = (\n  node: SVGElement,\n  callback: (\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    left: number,\n    top: number\n  ) => void\n) => {\n  const relativeNode = node?.parentNode;\n  if (relativeNode) {\n    setTimeout(() => {\n      // @ts-expect-error TODO: handle it better\n      const relativeRect = getBoundingClientRect(relativeNode);\n      const { height, left, top, width } = getBoundingClientRect(node);\n      const x = left - relativeRect.left;\n      const y = top - relativeRect.top;\n      callback(x, y, width, height, left, top);\n    }, 0);\n  }\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction remeasure(this: any) {\n  const tag = this.state.touchable.responderID;\n  if (tag === null) {\n    return;\n  }\n  measureLayout(tag, this._handleQueryLayout);\n}\n\nexport class WebShape<\n  P extends BaseProps = BaseProps,\n> extends React.Component<P> {\n  [x: string]: unknown;\n  protected tag?: React.ElementType;\n  protected prepareProps(props: P) {\n    return props;\n  }\n\n  elementRef =\n    React.createRef<SVGElement>() as React.MutableRefObject<SVGElement | null>;\n\n  lastMergedProps: Partial<P> = {};\n\n  /**\n   * disclaimer: I am not sure why the props are wrapped in a `style` attribute here, but that's how reanimated calls it\n   */\n  setNativeProps(props: { style: P }) {\n    const merged = Object.assign(\n      {},\n      this.props,\n      this.lastMergedProps,\n      props.style\n    );\n    this.lastMergedProps = merged;\n    const clean = prepare(this, this.prepareProps(merged));\n    const current = this.elementRef.current;\n    if (current) {\n      for (const cleanAttribute of Object.keys(clean)) {\n        const cleanValue = clean[cleanAttribute as keyof typeof clean];\n        switch (cleanAttribute) {\n          case 'ref':\n          case 'children':\n            break;\n          case 'style':\n            // style can be an object here or an array, so we convert it to an array and assign each element\n            for (const partialStyle of ([] as unknown[]).concat(\n              clean.style ?? []\n            )) {\n              Object.assign(current.style, partialStyle);\n            }\n            break;\n          default:\n            // apply all other incoming prop updates as attributes on the node\n            // same logic as in https://github.com/software-mansion/react-native-reanimated/blob/d04720c82f5941532991b235787285d36d717247/src/reanimated2/js-reanimated/index.ts#L38-L39\n            // @ts-expect-error TODO: fix this\n            current.setAttribute(camelCaseToDashed(cleanAttribute), cleanValue);\n            break;\n        }\n      }\n    }\n  }\n\n  _remeasureMetricsOnActivation: () => void;\n  touchableHandleStartShouldSetResponder?: (\n    e: GestureResponderEvent\n  ) => boolean;\n\n  touchableHandleResponderMove?: (e: GestureResponderEvent) => void;\n  touchableHandleResponderGrant?: (e: GestureResponderEvent) => void;\n  touchableHandleResponderRelease?: (e: GestureResponderEvent) => void;\n  touchableHandleResponderTerminate?: (e: GestureResponderEvent) => void;\n  touchableHandleResponderTerminationRequest?: (\n    e: GestureResponderEvent\n  ) => boolean;\n\n  constructor(props: P) {\n    super(props);\n\n    // Do not attach touchable mixin handlers if SVG element doesn't have a touchable prop\n    if (hasTouchableProperty(props)) {\n      SvgTouchableMixin(this);\n    }\n\n    this._remeasureMetricsOnActivation = remeasure.bind(this);\n  }\n\n  render(): JSX.Element {\n    if (!this.tag) {\n      throw new Error(\n        'When extending `WebShape` you need to overwrite either `tag` or `render`!'\n      );\n    }\n    this.lastMergedProps = {};\n    return createElement(\n      this.tag,\n      prepare(this, this.prepareProps(this.props))\n    );\n  }\n}\n\nexport class Circle extends WebShape<BaseProps & CircleProps> {\n  tag = 'circle' as const;\n}\n\nexport class ClipPath extends WebShape<BaseProps & ClipPathProps> {\n  tag = 'clipPath' as const;\n}\n\nexport class Defs extends WebShape {\n  tag = 'defs' as const;\n}\n\nexport class Ellipse extends WebShape<BaseProps & EllipseProps> {\n  tag = 'ellipse' as const;\n}\n\nexport class G extends WebShape<BaseProps & GProps> {\n  tag = 'g' as const;\n  prepareProps(props: BaseProps & GProps) {\n    const { x, y, ...rest } = props;\n\n    if ((x || y) && !rest.translate) {\n      rest.translate = `${x || 0}, ${y || 0}`;\n    }\n\n    return rest;\n  }\n}\n\nexport class Image extends WebShape<BaseProps & ImageProps> {\n  tag = 'image' as const;\n}\n\nexport class Line extends WebShape<BaseProps & LineProps> {\n  tag = 'line' as const;\n}\n\nexport class LinearGradient extends WebShape<BaseProps & LinearGradientProps> {\n  tag = 'linearGradient' as const;\n}\n\nexport class Path extends WebShape<BaseProps & PathProps> {\n  tag = 'path' as const;\n}\n\nexport class Polygon extends WebShape<BaseProps & PolygonProps> {\n  tag = 'polygon' as const;\n}\n\nexport class Polyline extends WebShape<BaseProps & PolylineProps> {\n  tag = 'polyline' as const;\n}\n\nexport class RadialGradient extends WebShape<BaseProps & RadialGradientProps> {\n  tag = 'radialGradient' as const;\n}\n\nexport class Rect extends WebShape<BaseProps & RectProps> {\n  tag = 'rect' as const;\n}\n\nexport class Stop extends WebShape<BaseProps & StopProps> {\n  tag = 'stop' as const;\n}\n\n/* Taken from here: https://gist.github.com/jennyknuth/222825e315d45a738ed9d6e04c7a88d0 */\nfunction encodeSvg(svgString: string) {\n  return svgString\n    .replace(\n      '<svg',\n      ~svgString.indexOf('xmlns')\n        ? '<svg'\n        : '<svg xmlns=\"http://www.w3.org/2000/svg\"'\n    )\n    .replace(/\"/g, \"'\")\n    .replace(/%/g, '%25')\n    .replace(/#/g, '%23')\n    .replace(/{/g, '%7B')\n    .replace(/}/g, '%7D')\n    .replace(/</g, '%3C')\n    .replace(/>/g, '%3E')\n    .replace(/\\s+/g, ' ');\n}\n\nexport class Svg extends WebShape<BaseProps & SvgProps> {\n  tag = 'svg' as const;\n  toDataURL(\n    callback: (data: string) => void,\n    options: { width?: number; height?: number } = {}\n  ) {\n    const ref = this.elementRef.current;\n\n    if (ref === null) {\n      return;\n    }\n\n    const rect = getBoundingClientRect(ref);\n\n    const width = Number(options.width) || rect.width;\n    const height = Number(options.height) || rect.height;\n\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttribute('viewBox', `0 0 ${rect.width} ${rect.height}`);\n    svg.setAttribute('width', String(width));\n    svg.setAttribute('height', String(height));\n    svg.appendChild(ref.cloneNode(true));\n\n    const img = new window.Image();\n    img.onload = () => {\n      const canvas = document.createElement('canvas');\n      canvas.width = width;\n      canvas.height = height;\n      const context = canvas.getContext('2d');\n      context?.drawImage(img, 0, 0);\n      callback(canvas.toDataURL().replace('data:image/png;base64,', ''));\n    };\n\n    img.src = `data:image/svg+xml;utf8,${encodeSvg(\n      new window.XMLSerializer().serializeToString(svg)\n    )}`;\n  }\n}\n\nexport class Symbol extends WebShape<BaseProps & SymbolProps> {\n  tag = 'symbol' as const;\n}\n\nexport class Text extends WebShape<BaseProps & TextProps> {\n  tag = 'text' as const;\n}\n\nexport class TSpan extends WebShape<BaseProps & TSpanProps> {\n  tag = 'tspan' as const;\n}\n\nexport class TextPath extends WebShape<BaseProps & TextPathProps> {\n  tag = 'textPath' as const;\n}\n\nexport class Use extends WebShape<BaseProps & UseProps> {\n  tag = 'use' as const;\n}\n\nexport class Mask extends WebShape<BaseProps & MaskProps> {\n  tag = 'mask' as const;\n}\n\nexport class ForeignObject extends WebShape<BaseProps & ForeignObjectProps> {\n  tag = 'foreignObject' as const;\n}\n\nexport class Marker extends WebShape<BaseProps & MarkerProps> {\n  tag = 'marker' as const;\n}\n\nexport class Pattern extends WebShape<BaseProps & PatternProps> {\n  tag = 'pattern' as const;\n}\n\nexport default Svg;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}