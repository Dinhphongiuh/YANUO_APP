{"ast":null,"code":"import * as Yup from 'yup';\nexport const loginValid = {\n  initial: {\n    phoneNumber: '',\n    password: ''\n  },\n  validationShema: Yup.object().shape({\n    phoneNumber: Yup.string().test('is-valid-phone-number', 'Số điện thoại bắt đầu từ 0 và gồm 10 chữ số', value => /^0\\d{9}$/.test(value)).required('Số điện thoại không được để trống!'),\n    password: Yup.string().trim().min(8, 'Mật khẩu không được ít hơn 8 ký tự !').required('Mật khẩu không được để trống!')\n  })\n};\nexport const isValidObjField = obj => {\n  return Object.values(obj).every(value => value.trim());\n};\nexport const updateError = (error, stateUpdater) => {\n  stateUpdater(error);\n  setTimeout(() => {\n    stateUpdater('');\n  }, 2500);\n};\nexport const isValidPhoneNumber = value => {\n  const regx = /^0\\d{9}$/;\n  return regx.test(value);\n};","map":{"version":3,"names":["Yup","loginValid","initial","phoneNumber","password","validationShema","object","shape","string","test","value","required","trim","min","isValidObjField","obj","Object","values","every","updateError","error","stateUpdater","setTimeout","isValidPhoneNumber","regx"],"sources":["C:/Users/DinhPhongIUH/Desktop/nhap/Yanuo_mobile_Redux/utils/validator.js"],"sourcesContent":["import * as Yup from 'yup';\r\nexport const loginValid = {\r\n    initial: {\r\n        phoneNumber: '',\r\n        password: '',\r\n    },\r\n    validationShema: Yup.object().shape({\r\n        phoneNumber: Yup.string().test('is-valid-phone-number', 'Số điện thoại bắt đầu từ 0 và gồm 10 chữ số', value => /^0\\d{9}$/.test(value)).required('Số điện thoại không được để trống!'),\r\n        password: Yup.string().trim().min(8, 'Mật khẩu không được ít hơn 8 ký tự !').required('Mật khẩu không được để trống!'),\r\n    })\r\n};\r\n\r\nexport const isValidObjField = (obj) => {\r\n    return Object.values(obj).every(value => value.trim())\r\n}\r\n\r\nexport const updateError = (error, stateUpdater) => {\r\n    stateUpdater(error);\r\n    setTimeout(() => {\r\n        stateUpdater('')\r\n    }, 2500);\r\n}\r\n\r\nexport const isValidPhoneNumber = (value) => {\r\n    const regx = /^0\\d{9}$/;\r\n    return regx.test(value);\r\n}"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAC1B,OAAO,MAAMC,UAAU,GAAG;EACtBC,OAAO,EAAE;IACLC,WAAW,EAAE,EAAE;IACfC,QAAQ,EAAE;EACd,CAAC;EACDC,eAAe,EAAEL,GAAG,CAACM,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;IAChCJ,WAAW,EAAEH,GAAG,CAACQ,MAAM,CAAC,CAAC,CAACC,IAAI,CAAC,uBAAuB,EAAE,6CAA6C,EAAEC,KAAK,IAAI,UAAU,CAACD,IAAI,CAACC,KAAK,CAAC,CAAC,CAACC,QAAQ,CAAC,oCAAoC,CAAC;IACtLP,QAAQ,EAAEJ,GAAG,CAACQ,MAAM,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,EAAE,sCAAsC,CAAC,CAACF,QAAQ,CAAC,+BAA+B;EACzH,CAAC;AACL,CAAC;AAED,OAAO,MAAMG,eAAe,GAAIC,GAAG,IAAK;EACpC,OAAOC,MAAM,CAACC,MAAM,CAACF,GAAG,CAAC,CAACG,KAAK,CAACR,KAAK,IAAIA,KAAK,CAACE,IAAI,CAAC,CAAC,CAAC;AAC1D,CAAC;AAED,OAAO,MAAMO,WAAW,GAAGA,CAACC,KAAK,EAAEC,YAAY,KAAK;EAChDA,YAAY,CAACD,KAAK,CAAC;EACnBE,UAAU,CAAC,MAAM;IACbD,YAAY,CAAC,EAAE,CAAC;EACpB,CAAC,EAAE,IAAI,CAAC;AACZ,CAAC;AAED,OAAO,MAAME,kBAAkB,GAAIb,KAAK,IAAK;EACzC,MAAMc,IAAI,GAAG,UAAU;EACvB,OAAOA,IAAI,CAACf,IAAI,CAACC,KAAK,CAAC;AAC3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}