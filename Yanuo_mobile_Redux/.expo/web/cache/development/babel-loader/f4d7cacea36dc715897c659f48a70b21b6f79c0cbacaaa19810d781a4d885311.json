{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\DinhPhongIUH\\\\Desktop\\\\nhap\\\\Yanuo_mobile_Redux\\\\components\\\\message\\\\emoijs\\\\EmojiPicker.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport React, { memo, useMemo, useRef, useState } from 'react';\nimport { TabView } from 'react-native-tab-view';\nimport categories from './emoijData/categories';\nimport EmojiCategory from './EmojiCategory';\nimport TabBar from './TabBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmojiPicker = () => {\n  const layout = useWindowDimensions();\n  const [index, setIndex] = useState(0);\n  const [routes, setRoutes] = useState(categories.tabs.map(tab => ({\n    key: tab.category,\n    title: tab.tabLabel\n  })));\n  const renderScene = ({\n    route\n  }) => _jsxDEV(EmojiCategory, {\n    category: route.key\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n  return _jsxDEV(TabView, {\n    renderTabBar: props => _jsxDEV(TabBar, _objectSpread({\n      setIndex: setIndex\n    }, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 27\n    }, this),\n    navigationState: {\n      index,\n      routes\n    },\n    onIndexChange: setIndex,\n    renderScene: renderScene,\n    initialLayout: {\n      width: layout.width\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\nexport default memo(EmojiPicker);","map":{"version":3,"names":["React","memo","useMemo","useRef","useState","TabView","categories","EmojiCategory","TabBar","jsxDEV","_jsxDEV","EmojiPicker","layout","useWindowDimensions","index","setIndex","routes","setRoutes","tabs","map","tab","key","category","title","tabLabel","renderScene","route","fileName","_jsxFileName","lineNumber","columnNumber","renderTabBar","props","_objectSpread","navigationState","onIndexChange","initialLayout","width"],"sources":["C:/Users/DinhPhongIUH/Desktop/nhap/Yanuo_mobile_Redux/components/message/emoijs/EmojiPicker.js"],"sourcesContent":["import { StyleSheet, Text, View, Image, TouchableOpacity, SafeAreaView, Dimensions, Animated, TouchableWithoutFeedback, ScrollView, PanResponder, TextInput, KeyboardAvoidingView, useWindowDimensions} from 'react-native';\r\nimport React, { memo, useMemo, useRef, useState } from 'react';\r\nimport { TabView } from 'react-native-tab-view';\r\nimport categories from './emoijData/categories';\r\nimport EmojiCategory from './EmojiCategory';\r\nimport TabBar from './TabBar';\r\n\r\n// export default function App()\r\n// {\r\n//     return (\r\n//         <View>\r\n\r\n//         </View>\r\n//     )\r\n// };\r\n\r\nconst EmojiPicker = () => {\r\n    const layout = useWindowDimensions();\r\n    const [index, setIndex] = useState(0);\r\n    const [routes, setRoutes] = useState(categories.tabs.map(tab => ({ key: tab.category, title: tab.tabLabel })));\r\n\r\n    const renderScene = ({ route }) => (\r\n\t\t<EmojiCategory \r\n\t\t\tcategory={route.key}\r\n\t\t/>\r\n\t)\r\n\r\n    return (\r\n        <TabView\r\n\t\t\trenderTabBar={props => <TabBar setIndex={setIndex} {...props} />}\r\n\t\t\tnavigationState={{index, routes}}\r\n\t\t\tonIndexChange={setIndex}\r\n\t\t\trenderScene={renderScene}\r\n\t\t\tinitialLayout={{ width: layout.width }}\r\n\t\t/>\r\n    )\r\n};\r\n\r\nexport default memo(EmojiPicker);"],"mappings":";;;;;;;;;;;;;;;;;;AACA,OAAOA,KAAK,IAAIC,IAAI,EAAEC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,OAAO,QAAQ,uBAAuB;AAC/C,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAW9B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACtB,MAAMC,MAAM,GAAGC,mBAAmB,CAAC,CAAC;EACpC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAACE,UAAU,CAACY,IAAI,CAACC,GAAG,CAACC,GAAG,KAAK;IAAEC,GAAG,EAAED,GAAG,CAACE,QAAQ;IAAEC,KAAK,EAAEH,GAAG,CAACI;EAAS,CAAC,CAAC,CAAC,CAAC;EAE9G,MAAMC,WAAW,GAAGA,CAAC;IAAEC;EAAM,CAAC,KAChChB,OAAA,CAACH,aAAa;IACbe,QAAQ,EAAEI,KAAK,CAACL;EAAI;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CACD;EAEE,OACIpB,OAAA,CAACL,OAAO;IACb0B,YAAY,EAAEC,KAAK,IAAItB,OAAA,CAACF,MAAM,EAAAyB,aAAA;MAAClB,QAAQ,EAAEA;IAAS,GAAKiB,KAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAE;IACjEI,eAAe,EAAE;MAACpB,KAAK;MAAEE;IAAM,CAAE;IACjCmB,aAAa,EAAEpB,QAAS;IACxBU,WAAW,EAAEA,WAAY;IACzBW,aAAa,EAAE;MAAEC,KAAK,EAAEzB,MAAM,CAACyB;IAAM;EAAE;IAAAV,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEJ,CAAC;AAED,eAAe7B,IAAI,CAACU,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}