{"ast":null,"code":"import { decode83 } from './base83';\nimport { ValidationError } from './error';\nimport { sRGBToLinear, signPow, linearTosRGB } from './utils';\nconst validateBlurhash = blurhash => {\n  if (!blurhash || blurhash.length < 6) {\n    throw new ValidationError('The blurhash string must be at least 6 characters');\n  }\n  const sizeFlag = decode83(blurhash[0]);\n  const numY = Math.floor(sizeFlag / 9) + 1;\n  const numX = sizeFlag % 9 + 1;\n  if (blurhash.length !== 4 + 2 * numX * numY) {\n    throw new ValidationError(`blurhash length mismatch: length is ${blurhash.length} but it should be ${4 + 2 * numX * numY}`);\n  }\n};\nexport const isBlurhashValid = blurhash => {\n  try {\n    validateBlurhash(blurhash);\n  } catch (error) {\n    return {\n      result: false,\n      errorReason: error.message\n    };\n  }\n  return {\n    result: true\n  };\n};\nconst decodeDC = value => {\n  const intR = value >> 16;\n  const intG = value >> 8 & 255;\n  const intB = value & 255;\n  return [sRGBToLinear(intR), sRGBToLinear(intG), sRGBToLinear(intB)];\n};\nconst decodeAC = (value, maximumValue) => {\n  const quantR = Math.floor(value / (19 * 19));\n  const quantG = Math.floor(value / 19) % 19;\n  const quantB = value % 19;\n  const rgb = [signPow((quantR - 9) / 9, 2.0) * maximumValue, signPow((quantG - 9) / 9, 2.0) * maximumValue, signPow((quantB - 9) / 9, 2.0) * maximumValue];\n  return rgb;\n};\nconst decode = (blurhash, width, height, punch) => {\n  validateBlurhash(blurhash);\n  punch = (punch || 1) | 1;\n  const sizeFlag = decode83(blurhash[0]);\n  const numY = Math.floor(sizeFlag / 9) + 1;\n  const numX = sizeFlag % 9 + 1;\n  const quantisedMaximumValue = decode83(blurhash[1]);\n  const maximumValue = (quantisedMaximumValue + 1) / 166;\n  const colors = new Array(numX * numY);\n  for (let i = 0; i < colors.length; i++) {\n    if (i === 0) {\n      const value = decode83(blurhash.substring(2, 6));\n      colors[i] = decodeDC(value);\n    } else {\n      const value = decode83(blurhash.substring(4 + i * 2, 6 + i * 2));\n      colors[i] = decodeAC(value, maximumValue * punch);\n    }\n  }\n  const bytesPerRow = width * 4;\n  const pixels = new Uint8ClampedArray(bytesPerRow * height);\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      let r = 0;\n      let g = 0;\n      let b = 0;\n      for (let j = 0; j < numY; j++) {\n        for (let i = 0; i < numX; i++) {\n          const basis = Math.cos(Math.PI * x * i / width) * Math.cos(Math.PI * y * j / height);\n          const color = colors[i + j * numX];\n          r += color[0] * basis;\n          g += color[1] * basis;\n          b += color[2] * basis;\n        }\n      }\n      const intR = linearTosRGB(r);\n      const intG = linearTosRGB(g);\n      const intB = linearTosRGB(b);\n      pixels[4 * x + 0 + y * bytesPerRow] = intR;\n      pixels[4 * x + 1 + y * bytesPerRow] = intG;\n      pixels[4 * x + 2 + y * bytesPerRow] = intB;\n      pixels[4 * x + 3 + y * bytesPerRow] = 255;\n    }\n  }\n  return pixels;\n};\nexport default decode;","map":{"version":3,"names":["decode83","ValidationError","sRGBToLinear","signPow","linearTosRGB","validateBlurhash","blurhash","length","sizeFlag","numY","Math","floor","numX","isBlurhashValid","error","result","errorReason","message","decodeDC","value","intR","intG","intB","decodeAC","maximumValue","quantR","quantG","quantB","rgb","decode","width","height","punch","quantisedMaximumValue","colors","Array","i","substring","bytesPerRow","pixels","Uint8ClampedArray","y","x","r","g","b","j","basis","cos","PI","color"],"sources":["C:\\Users\\DinhPhongIUH\\Desktop\\nhap\\Yanuo_mobile_Redux\\node_modules\\expo-image\\src\\utils\\blurhash\\decode.ts"],"sourcesContent":["import { decode83 } from './base83';\nimport { ValidationError } from './error';\nimport { sRGBToLinear, signPow, linearTosRGB } from './utils';\n\n/**\n * Returns an error message if invalid or undefined if valid\n * @param blurhash\n */\nconst validateBlurhash = (blurhash: string) => {\n  if (!blurhash || blurhash.length < 6) {\n    throw new ValidationError('The blurhash string must be at least 6 characters');\n  }\n\n  const sizeFlag = decode83(blurhash[0]);\n  const numY = Math.floor(sizeFlag / 9) + 1;\n  const numX = (sizeFlag % 9) + 1;\n\n  if (blurhash.length !== 4 + 2 * numX * numY) {\n    throw new ValidationError(\n      `blurhash length mismatch: length is ${blurhash.length} but it should be ${\n        4 + 2 * numX * numY\n      }`\n    );\n  }\n};\n\nexport const isBlurhashValid = (blurhash: string): { result: boolean; errorReason?: string } => {\n  try {\n    validateBlurhash(blurhash);\n  } catch (error) {\n    return { result: false, errorReason: error.message };\n  }\n\n  return { result: true };\n};\n\nconst decodeDC = (value: number) => {\n  const intR = value >> 16;\n  const intG = (value >> 8) & 255;\n  const intB = value & 255;\n  return [sRGBToLinear(intR), sRGBToLinear(intG), sRGBToLinear(intB)];\n};\n\nconst decodeAC = (value: number, maximumValue: number) => {\n  const quantR = Math.floor(value / (19 * 19));\n  const quantG = Math.floor(value / 19) % 19;\n  const quantB = value % 19;\n\n  const rgb = [\n    signPow((quantR - 9) / 9, 2.0) * maximumValue,\n    signPow((quantG - 9) / 9, 2.0) * maximumValue,\n    signPow((quantB - 9) / 9, 2.0) * maximumValue,\n  ];\n\n  return rgb;\n};\n\nconst decode = (blurhash: string, width: number, height: number, punch?: number) => {\n  validateBlurhash(blurhash);\n\n  punch = (punch || 1) | 1;\n\n  const sizeFlag = decode83(blurhash[0]);\n  const numY = Math.floor(sizeFlag / 9) + 1;\n  const numX = (sizeFlag % 9) + 1;\n\n  const quantisedMaximumValue = decode83(blurhash[1]);\n  const maximumValue = (quantisedMaximumValue + 1) / 166;\n\n  const colors = new Array(numX * numY);\n\n  for (let i = 0; i < colors.length; i++) {\n    if (i === 0) {\n      const value = decode83(blurhash.substring(2, 6));\n      colors[i] = decodeDC(value);\n    } else {\n      const value = decode83(blurhash.substring(4 + i * 2, 6 + i * 2));\n      colors[i] = decodeAC(value, maximumValue * punch);\n    }\n  }\n\n  const bytesPerRow = width * 4;\n  const pixels = new Uint8ClampedArray(bytesPerRow * height);\n\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      let r = 0;\n      let g = 0;\n      let b = 0;\n\n      for (let j = 0; j < numY; j++) {\n        for (let i = 0; i < numX; i++) {\n          const basis = Math.cos((Math.PI * x * i) / width) * Math.cos((Math.PI * y * j) / height);\n          const color = colors[i + j * numX];\n          r += color[0] * basis;\n          g += color[1] * basis;\n          b += color[2] * basis;\n        }\n      }\n\n      const intR = linearTosRGB(r);\n      const intG = linearTosRGB(g);\n      const intB = linearTosRGB(b);\n\n      pixels[4 * x + 0 + y * bytesPerRow] = intR;\n      pixels[4 * x + 1 + y * bytesPerRow] = intG;\n      pixels[4 * x + 2 + y * bytesPerRow] = intB;\n      pixels[4 * x + 3 + y * bytesPerRow] = 255; // alpha\n    }\n  }\n  return pixels;\n};\n\nexport default decode;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}