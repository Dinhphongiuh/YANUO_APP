{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nconst _excluded = [\"enabled\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty2(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { State } from '../../State';\nimport { DiagonalDirections, Directions } from '../../Directions';\nimport GestureHandler from './GestureHandler';\nimport Vector from '../tools/Vector';\nimport { coneToDeviation } from '../utils';\nconst DEFAULT_MAX_DURATION_MS = 800;\nconst DEFAULT_MIN_VELOCITY = 700;\nconst DEFAULT_ALIGNMENT_CONE = 30;\nconst DEFAULT_DIRECTION = Directions.RIGHT;\nconst DEFAULT_NUMBER_OF_TOUCHES_REQUIRED = 1;\nconst AXIAL_DEVIATION_COSINE = coneToDeviation(DEFAULT_ALIGNMENT_CONE);\nconst DIAGONAL_DEVIATION_COSINE = coneToDeviation(90 - DEFAULT_ALIGNMENT_CONE);\nexport default class FlingGestureHandler extends GestureHandler {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"numberOfPointersRequired\", DEFAULT_NUMBER_OF_TOUCHES_REQUIRED);\n    _defineProperty(this, \"direction\", DEFAULT_DIRECTION);\n    _defineProperty(this, \"maxDurationMs\", DEFAULT_MAX_DURATION_MS);\n    _defineProperty(this, \"minVelocity\", DEFAULT_MIN_VELOCITY);\n    _defineProperty(this, \"delayTimeout\", void 0);\n    _defineProperty(this, \"maxNumberOfPointersSimultaneously\", 0);\n    _defineProperty(this, \"keyPointer\", NaN);\n  }\n  init(ref, propsRef) {\n    super.init(ref, propsRef);\n  }\n  updateGestureConfig(_ref) {\n    let {\n        enabled = true\n      } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n    super.updateGestureConfig(_objectSpread({\n      enabled: enabled\n    }, props));\n    if (this.config.direction) {\n      this.direction = this.config.direction;\n    }\n    if (this.config.numberOfPointers) {\n      this.numberOfPointersRequired = this.config.numberOfPointers;\n    }\n  }\n  startFling() {\n    this.begin();\n    this.maxNumberOfPointersSimultaneously = 1;\n    this.delayTimeout = setTimeout(() => this.fail(), this.maxDurationMs);\n  }\n  tryEndFling() {\n    const velocityVector = Vector.fromVelocity(this.tracker, this.keyPointer);\n    const getAlignment = (direction, minimalAlignmentCosine) => {\n      return (direction & this.direction) === direction && velocityVector.isSimilar(Vector.fromDirection(direction), minimalAlignmentCosine);\n    };\n    const axialDirectionsList = Object.values(Directions);\n    const diagonalDirectionsList = Object.values(DiagonalDirections);\n    const axialAlignmentList = axialDirectionsList.map(direction => getAlignment(direction, AXIAL_DEVIATION_COSINE));\n    const diagonalAlignmentList = diagonalDirectionsList.map(direction => getAlignment(direction, DIAGONAL_DEVIATION_COSINE));\n    const isAligned = axialAlignmentList.some(Boolean) || diagonalAlignmentList.some(Boolean);\n    const isFast = velocityVector.magnitude > this.minVelocity;\n    if (this.maxNumberOfPointersSimultaneously === this.numberOfPointersRequired && isAligned && isFast) {\n      clearTimeout(this.delayTimeout);\n      this.activate();\n      return true;\n    }\n    return false;\n  }\n  endFling() {\n    if (!this.tryEndFling()) {\n      this.fail();\n    }\n  }\n  onPointerDown(event) {\n    if (!this.isButtonInConfig(event.button)) {\n      return;\n    }\n    this.tracker.addToTracker(event);\n    this.keyPointer = event.pointerId;\n    super.onPointerDown(event);\n    this.newPointerAction();\n  }\n  onPointerAdd(event) {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n    this.newPointerAction();\n  }\n  newPointerAction() {\n    if (this.currentState === State.UNDETERMINED) {\n      this.startFling();\n    }\n    if (this.currentState !== State.BEGAN) {\n      return;\n    }\n    this.tryEndFling();\n    if (this.tracker.getTrackedPointersCount() > this.maxNumberOfPointersSimultaneously) {\n      this.maxNumberOfPointersSimultaneously = this.tracker.getTrackedPointersCount();\n    }\n  }\n  pointerMoveAction(event) {\n    this.tracker.track(event);\n    if (this.currentState !== State.BEGAN) {\n      return;\n    }\n    this.tryEndFling();\n  }\n  onPointerMove(event) {\n    this.pointerMoveAction(event);\n    super.onPointerMove(event);\n  }\n  onPointerOutOfBounds(event) {\n    this.pointerMoveAction(event);\n    super.onPointerOutOfBounds(event);\n  }\n  onPointerUp(event) {\n    super.onPointerUp(event);\n    this.onUp(event);\n    this.keyPointer = NaN;\n  }\n  onPointerRemove(event) {\n    super.onPointerRemove(event);\n    this.onUp(event);\n  }\n  onUp(event) {\n    if (this.currentState === State.BEGAN) {\n      this.endFling();\n    }\n    this.tracker.removeFromTracker(event.pointerId);\n  }\n  activate(force) {\n    super.activate(force);\n    this.end();\n  }\n  resetConfig() {\n    super.resetConfig();\n    this.numberOfPointersRequired = DEFAULT_NUMBER_OF_TOUCHES_REQUIRED;\n    this.direction = DEFAULT_DIRECTION;\n  }\n}","map":{"version":3,"names":["State","DiagonalDirections","Directions","GestureHandler","Vector","coneToDeviation","DEFAULT_MAX_DURATION_MS","DEFAULT_MIN_VELOCITY","DEFAULT_ALIGNMENT_CONE","DEFAULT_DIRECTION","RIGHT","DEFAULT_NUMBER_OF_TOUCHES_REQUIRED","AXIAL_DEVIATION_COSINE","DIAGONAL_DEVIATION_COSINE","FlingGestureHandler","constructor","args","_defineProperty","NaN","init","ref","propsRef","updateGestureConfig","_ref","enabled","props","_objectWithoutProperties","_excluded","_objectSpread","config","direction","numberOfPointers","numberOfPointersRequired","startFling","begin","maxNumberOfPointersSimultaneously","delayTimeout","setTimeout","fail","maxDurationMs","tryEndFling","velocityVector","fromVelocity","tracker","keyPointer","getAlignment","minimalAlignmentCosine","isSimilar","fromDirection","axialDirectionsList","Object","values","diagonalDirectionsList","axialAlignmentList","map","diagonalAlignmentList","isAligned","some","Boolean","isFast","magnitude","minVelocity","clearTimeout","activate","endFling","onPointerDown","event","isButtonInConfig","button","addToTracker","pointerId","newPointerAction","onPointerAdd","currentState","UNDETERMINED","BEGAN","getTrackedPointersCount","pointerMoveAction","track","onPointerMove","onPointerOutOfBounds","onPointerUp","onUp","onPointerRemove","removeFromTracker","force","end","resetConfig"],"sources":["C:\\Users\\DinhPhongIUH\\Desktop\\nhap\\Yanuo_mobile_Redux\\node_modules\\react-native-gesture-handler\\lib\\module\\web\\handlers\\FlingGestureHandler.ts"],"sourcesContent":["import { State } from '../../State';\nimport { DiagonalDirections, Directions } from '../../Directions';\nimport { AdaptedEvent, Config } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\nimport Vector from '../tools/Vector';\nimport { coneToDeviation } from '../utils';\n\nconst DEFAULT_MAX_DURATION_MS = 800;\nconst DEFAULT_MIN_VELOCITY = 700;\nconst DEFAULT_ALIGNMENT_CONE = 30;\nconst DEFAULT_DIRECTION = Directions.RIGHT;\nconst DEFAULT_NUMBER_OF_TOUCHES_REQUIRED = 1;\n\nconst AXIAL_DEVIATION_COSINE = coneToDeviation(DEFAULT_ALIGNMENT_CONE);\nconst DIAGONAL_DEVIATION_COSINE = coneToDeviation(90 - DEFAULT_ALIGNMENT_CONE);\n\nexport default class FlingGestureHandler extends GestureHandler {\n  private numberOfPointersRequired = DEFAULT_NUMBER_OF_TOUCHES_REQUIRED;\n  private direction: Directions = DEFAULT_DIRECTION;\n\n  private maxDurationMs = DEFAULT_MAX_DURATION_MS;\n  private minVelocity = DEFAULT_MIN_VELOCITY;\n  private delayTimeout!: number;\n\n  private maxNumberOfPointersSimultaneously = 0;\n  private keyPointer = NaN;\n\n  public init(ref: number, propsRef: React.RefObject<unknown>): void {\n    super.init(ref, propsRef);\n  }\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n\n    if (this.config.direction) {\n      this.direction = this.config.direction;\n    }\n\n    if (this.config.numberOfPointers) {\n      this.numberOfPointersRequired = this.config.numberOfPointers;\n    }\n  }\n\n  private startFling(): void {\n    this.begin();\n\n    this.maxNumberOfPointersSimultaneously = 1;\n\n    this.delayTimeout = setTimeout(() => this.fail(), this.maxDurationMs);\n  }\n\n  private tryEndFling(): boolean {\n    const velocityVector = Vector.fromVelocity(this.tracker, this.keyPointer);\n\n    const getAlignment = (\n      direction: Directions | DiagonalDirections,\n      minimalAlignmentCosine: number\n    ) => {\n      return (\n        (direction & this.direction) === direction &&\n        velocityVector.isSimilar(\n          Vector.fromDirection(direction),\n          minimalAlignmentCosine\n        )\n      );\n    };\n\n    const axialDirectionsList = Object.values(Directions);\n    const diagonalDirectionsList = Object.values(DiagonalDirections);\n\n    // list of alignments to all activated directions\n    const axialAlignmentList = axialDirectionsList.map((direction) =>\n      getAlignment(direction, AXIAL_DEVIATION_COSINE)\n    );\n\n    const diagonalAlignmentList = diagonalDirectionsList.map((direction) =>\n      getAlignment(direction, DIAGONAL_DEVIATION_COSINE)\n    );\n\n    const isAligned =\n      axialAlignmentList.some(Boolean) || diagonalAlignmentList.some(Boolean);\n\n    const isFast = velocityVector.magnitude > this.minVelocity;\n\n    if (\n      this.maxNumberOfPointersSimultaneously ===\n        this.numberOfPointersRequired &&\n      isAligned &&\n      isFast\n    ) {\n      clearTimeout(this.delayTimeout);\n      this.activate();\n\n      return true;\n    }\n\n    return false;\n  }\n\n  private endFling() {\n    if (!this.tryEndFling()) {\n      this.fail();\n    }\n  }\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    if (!this.isButtonInConfig(event.button)) {\n      return;\n    }\n\n    this.tracker.addToTracker(event);\n    this.keyPointer = event.pointerId;\n\n    super.onPointerDown(event);\n    this.newPointerAction();\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n    this.newPointerAction();\n  }\n\n  private newPointerAction(): void {\n    if (this.currentState === State.UNDETERMINED) {\n      this.startFling();\n    }\n\n    if (this.currentState !== State.BEGAN) {\n      return;\n    }\n\n    this.tryEndFling();\n\n    if (\n      this.tracker.getTrackedPointersCount() >\n      this.maxNumberOfPointersSimultaneously\n    ) {\n      this.maxNumberOfPointersSimultaneously =\n        this.tracker.getTrackedPointersCount();\n    }\n  }\n\n  private pointerMoveAction(event: AdaptedEvent): void {\n    this.tracker.track(event);\n\n    if (this.currentState !== State.BEGAN) {\n      return;\n    }\n\n    this.tryEndFling();\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.pointerMoveAction(event);\n    super.onPointerMove(event);\n  }\n\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    this.pointerMoveAction(event);\n    super.onPointerOutOfBounds(event);\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.onUp(event);\n\n    this.keyPointer = NaN;\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.onUp(event);\n  }\n\n  private onUp(event: AdaptedEvent): void {\n    if (this.currentState === State.BEGAN) {\n      this.endFling();\n    }\n\n    this.tracker.removeFromTracker(event.pointerId);\n  }\n\n  public activate(force?: boolean): void {\n    super.activate(force);\n    this.end();\n  }\n\n  protected resetConfig(): void {\n    super.resetConfig();\n    this.numberOfPointersRequired = DEFAULT_NUMBER_OF_TOUCHES_REQUIRED;\n    this.direction = DEFAULT_DIRECTION;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}