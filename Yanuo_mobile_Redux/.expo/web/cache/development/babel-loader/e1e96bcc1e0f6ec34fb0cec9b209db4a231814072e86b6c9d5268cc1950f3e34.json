{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nconst _excluded = [\"author\", \"profile\", \"emoji\", \"text\", \"color\", \"mediaUrl\", \"currentUser\", \"isGroupChat\", \"navigation\", \"messageId\", \"senderId\", \"replyMess\", \"repliedMessage\"];\nvar _jsxFileName = \"C:\\\\Users\\\\DinhPhongIUH\\\\Desktop\\\\nhap\\\\Yanuo_mobile_Redux\\\\screens\\\\components\\\\MessageButton.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useEffect, useRef, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { getUser } from \"../../api/UserRequests\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MessageButton = _ref => {\n  let {\n      author,\n      profile,\n      emoji,\n      text,\n      color,\n      mediaUrl,\n      currentUser,\n      isGroupChat,\n      navigation,\n      messageId,\n      senderId,\n      replyMess,\n      repliedMessage\n    } = _ref,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  const [userName, setUserName] = useState('');\n  useEffect(() => {\n    const fetchUserName = async () => {\n      try {\n        const res = await getUser(senderId);\n        if (res.data.success) {\n          setUserName(res.data.user.userName);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchUserName();\n  }, [senderId]);\n  console.log('sd', userName);\n  const touchpadheight = useRef(null);\n  const handlePress = e => {\n    if (touchpadheight.current) {\n      touchpadheight.current.measure((x, y, width, height) => {\n        console.log('toucjs', height);\n      });\n    }\n  };\n  return _jsxDEV(_Fragment, {\n    children: [replyMess.replyTo ? _jsxDEV(TouchableOpacity, {\n      style: {\n        backgroundColor: author === profile._id ? \"#f5f5f5\" : \"#f5f5f5\",\n        maxWidth: '70%',\n        alignSelf: author === profile._id ? 'flex-end' : \"flex-start\",\n        padding: 10,\n        borderRadius: 10,\n        borderWidth: 1,\n        borderColor: '#d7dada',\n        marginTop: 5,\n        marginBottom: -10\n      },\n      children: repliedMessage.text === '' ? _jsxDEV(Image, {\n        source: {\n          uri: repliedMessage.mediaUrl[0].url\n        },\n        resizeMode: \"contain\",\n        style: {\n          width: 80,\n          height: 80\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this) : _jsxDEV(Text, {\n        children: repliedMessage.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this) : null, _jsxDEV(TouchableOpacity, _objectSpread(_objectSpread({}, rest), {}, {\n      style: {\n        backgroundColor: author === profile._id ? \"#d0f0fd\" : \"#fefefe\",\n        maxWidth: '70%',\n        alignSelf: author === profile._id ? 'flex-end' : \"flex-start\",\n        padding: 10,\n        borderRadius: 10,\n        borderWidth: 1,\n        borderColor: '#d7dada',\n        marginTop: 5\n      },\n      activeOpacity: 0.7,\n      ref: touchpadheight,\n      children: _jsxDEV(View, {\n        style: styles.container,\n        children: [_jsxDEV(View, {\n          style: {},\n          children: [isGroupChat && senderId !== profile._id ? _jsxDEV(Text, {\n            style: {\n              marginBottom: 5\n            },\n            children: userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this) : null, text ? _jsxDEV(View, {\n            children: _jsxDEV(Text, {\n              style: [styles.text, {\n                color: color\n              }],\n              children: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this) : null, mediaUrl ? _jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              flexWrap: 'wrap',\n              justifyContent: 'center'\n            },\n            children: mediaUrl.map((item, index) => _jsxDEV(TouchableOpacity, {\n              style: {\n                width: 100,\n                height: 100,\n                flexDirection: 'row',\n                justifyContent: 'center',\n                alignItems: 'center',\n                borderWidth: 2,\n                borderColor: '#fff'\n              },\n              onPress: () => navigation.push(\"ViewMediaChat\", url = item.url),\n              children: _jsxDEV(Image, {\n                source: {\n                  uri: item.url\n                },\n                style: {\n                  width: 100,\n                  height: '100%'\n                },\n                resizeMode: \"cover\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 41\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), _jsxDEV(View, {\n          style: {\n            position: \"absolute\",\n            bottom: -40,\n            right: -10\n          },\n          children: emoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\nconst styles = StyleSheet.create({\n  root: {\n    padding: 10\n  },\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  text: {\n    fontSize: 18,\n    color: '#121212'\n  }\n});\nexport default MessageButton;","map":{"version":3,"names":["React","useEffect","useRef","useState","StyleSheet","Text","TouchableOpacity","View","Image","getUser","jsxDEV","_jsxDEV","Fragment","_Fragment","MessageButton","_ref","author","profile","emoji","text","color","mediaUrl","currentUser","isGroupChat","navigation","messageId","senderId","replyMess","repliedMessage","rest","_objectWithoutProperties","_excluded","userName","setUserName","fetchUserName","res","data","success","user","error","console","log","touchpadheight","handlePress","e","current","measure","x","y","width","height","children","replyTo","style","backgroundColor","_id","maxWidth","alignSelf","padding","borderRadius","borderWidth","borderColor","marginTop","marginBottom","source","uri","url","resizeMode","fileName","_jsxFileName","lineNumber","columnNumber","_objectSpread","activeOpacity","ref","styles","container","flexDirection","flexWrap","justifyContent","map","item","index","alignItems","onPress","push","position","bottom","right","create","root","fontSize"],"sources":["C:/Users/DinhPhongIUH/Desktop/nhap/Yanuo_mobile_Redux/screens/components/MessageButton.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { StyleSheet, Text, TouchableOpacity, View, Image } from \"react-native\";\r\nimport { getUser } from \"../../api/UserRequests\";\r\n\r\nconst MessageButton = ({author , profile, emoji, text, color, mediaUrl, currentUser, isGroupChat, navigation , messageId, senderId, replyMess, repliedMessage, ...rest}) => {\r\n    // console.log('nal', repliedMessage);\r\n    const [userName, setUserName] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchUserName = async () => {\r\n            try {\r\n                // Giả sử bạn có một hàm getUser để lấy thông tin người dùng từ server\r\n                const res = await getUser(senderId);\r\n                // console.log(res.data.user.userName);\r\n                if (res.data.success) {\r\n                    setUserName(res.data.user.userName);\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n\r\n        fetchUserName();\r\n    }, [senderId]);\r\n    console.log('sd', userName);\r\n\r\n    const touchpadheight = useRef(null);\r\n    const handlePress = (e) => {\r\n        if (touchpadheight.current)\r\n        {\r\n            touchpadheight.current.measure((x, y, width, height) => {\r\n                console.log('toucjs', height);\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        {replyMess.replyTo ? \r\n                <TouchableOpacity \r\n                    // style={[{backgroundColor: 'pink', height: 20}, styles.container]}\r\n                    style={{\r\n                        backgroundColor: author === profile._id ? \"#f5f5f5\" : \"#f5f5f5\",\r\n                        maxWidth: '70%',\r\n                        alignSelf: author === profile._id ? 'flex-end' : \"flex-start\",\r\n                        padding: 10,\r\n                        borderRadius: 10,\r\n                        borderWidth: 1,\r\n                        borderColor: '#d7dada',\r\n                        marginTop: 5, \r\n                        marginBottom: -10\r\n                    }}\r\n                >\r\n                    {repliedMessage.text === '' ? \r\n                        <Image\r\n                            source={{uri: repliedMessage.mediaUrl[0].url}}\r\n                            resizeMode=\"contain\"\r\n                            style={{width: 80, height: 80}}\r\n                        ></Image>\r\n                        :\r\n                        <Text>{repliedMessage.text}</Text>\r\n                    }\r\n                </TouchableOpacity>\r\n                : null\r\n            }\r\n            <TouchableOpacity \r\n                {...rest} \r\n                style={{\r\n                    backgroundColor: author === profile._id ? \"#d0f0fd\" : \"#fefefe\",\r\n                    maxWidth: '70%',\r\n                    alignSelf: author === profile._id ? 'flex-end' : \"flex-start\",\r\n                    padding: 10,\r\n                    borderRadius: 10,\r\n                    borderWidth: 1,\r\n                    borderColor: '#d7dada',\r\n                    marginTop: 5, \r\n                }}\r\n                activeOpacity={0.7}\r\n                ref={touchpadheight}\r\n            >\r\n                <View style={styles.container}>\r\n                    <View style={{}}>\r\n                        {isGroupChat && senderId !== profile._id ?\r\n                            <Text style={{marginBottom: 5}}>{userName}</Text> : null\r\n                        }\r\n                        {text ? \r\n                            <View>\r\n                                {/* <Text>{replyMess.replyTo}</Text> */}\r\n                                <Text style={[styles.text, {color: color}]}>{text}</Text>\r\n                            </View>\r\n                            : null\r\n                        }\r\n                        {\r\n                            mediaUrl ? \r\n                            <View style={{ flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'center'}}>\r\n                                {mediaUrl.map((item, index) => (\r\n                                    <TouchableOpacity\r\n                                        style={{width: 100, height: 100, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', borderWidth: 2, borderColor: '#fff',}}\r\n                                        key={index}\r\n                                        onPress={() => navigation.push(\"ViewMediaChat\", url=item.url)} //show Image of video\r\n                                    >\r\n                                        <Image\r\n                                            source={{uri: item.url}}\r\n                                            style={{width: 100, height: '100%'}}\r\n                                            resizeMode=\"cover\"\r\n                                        ></Image>\r\n                                    </TouchableOpacity>\r\n                                ))}\r\n                            </View> : null\r\n                        }\r\n                    </View>\r\n                        <View style={{position: \"absolute\", bottom: -40, right: -10}}>\r\n                            {emoji}\r\n                        </View>\r\n                    {/* <View style={{paddingHorizontal: 4}}></View> */}\r\n                </View>\r\n            </TouchableOpacity>\r\n        </>\r\n    )\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    root: {\r\n        // backgroundColor: \"rgba(0, 0, 0, 0.14)\",\r\n        padding: 10,\r\n        \r\n    },\r\n    container: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    text: {\r\n        // textTransform: 'capitalize',\r\n        fontSize: 18,\r\n        color: '#121212'\r\n    }\r\n})\r\n\r\nexport default MessageButton;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}