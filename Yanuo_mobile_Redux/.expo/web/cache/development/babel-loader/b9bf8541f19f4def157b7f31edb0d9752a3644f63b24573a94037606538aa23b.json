{"ast":null,"code":"import DiscreteGestureHandler from './DiscreteGestureHandler';\nimport * as NodeManager from './NodeManager';\nimport PressGestureHandler from './PressGestureHandler';\nimport { TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from './utils';\nclass NativeViewGestureHandler extends PressGestureHandler {\n  get isNative() {\n    return true;\n  }\n  onRawEvent(ev) {\n    super.onRawEvent(ev);\n    if (!ev.isFinal) {\n      if (TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ({\n        x: ev.deltaX,\n        y: ev.deltaY\n      }), 10)) {\n        if (this.config.disallowInterruption) {\n          const gestures = Object.values(NodeManager.getNodes()).filter(gesture => {\n            const {\n              handlerTag,\n              view,\n              isGestureRunning\n            } = gesture;\n            return handlerTag !== this.handlerTag && isGestureRunning && gesture instanceof DiscreteGestureHandler && view && this.view.contains(view);\n          });\n          for (const gesture of gestures) {\n            gesture.forceInvalidate(ev);\n          }\n        }\n      }\n    }\n  }\n}\nexport default NativeViewGestureHandler;","map":{"version":3,"names":["DiscreteGestureHandler","NodeManager","PressGestureHandler","TEST_MIN_IF_NOT_NAN","VEC_LEN_SQ","NativeViewGestureHandler","isNative","onRawEvent","ev","isFinal","x","deltaX","y","deltaY","config","disallowInterruption","gestures","Object","values","getNodes","filter","gesture","handlerTag","view","isGestureRunning","contains","forceInvalidate"],"sources":["C:\\Users\\DinhPhongIUH\\Desktop\\nhap\\Yanuo_mobile_Redux\\node_modules\\react-native-gesture-handler\\lib\\module\\web_hammer\\NativeViewGestureHandler.ts"],"sourcesContent":["import DiscreteGestureHandler from './DiscreteGestureHandler';\nimport { HammerInputExt } from './GestureHandler';\nimport * as NodeManager from './NodeManager';\nimport PressGestureHandler from './PressGestureHandler';\nimport { TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from './utils';\n\nclass NativeViewGestureHandler extends PressGestureHandler {\n  get isNative() {\n    return true;\n  }\n\n  onRawEvent(ev: HammerInputExt) {\n    super.onRawEvent(ev);\n    if (!ev.isFinal) {\n      // if (this.ref instanceof ScrollView) {\n      if (TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ({ x: ev.deltaX, y: ev.deltaY }), 10)) {\n        // @ts-ignore FIXME(TS) config type\n        if (this.config.disallowInterruption) {\n          const gestures = Object.values(NodeManager.getNodes()).filter(\n            (gesture) => {\n              const { handlerTag, view, isGestureRunning } = gesture;\n              return (\n                // Check if this gesture isn't self\n                handlerTag !== this.handlerTag &&\n                // Ensure the gesture needs to be cancelled\n                isGestureRunning &&\n                // ScrollView can cancel discrete gestures like taps and presses\n                gesture instanceof DiscreteGestureHandler &&\n                // Ensure a view exists and is a child of the current view\n                view &&\n                // @ts-ignore FIXME(TS) view type\n                this.view.contains(view)\n              );\n            }\n          );\n          // Cancel all of the gestures that passed the filter\n          for (const gesture of gestures) {\n            // TODO: Bacon: Send some cached event.\n            gesture.forceInvalidate(ev);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default NativeViewGestureHandler;\n"],"mappings":"AAAA,OAAOA,sBAAP,MAAmC,0BAAnC;AAEA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAASC,mBAAT,EAA8BC,UAA9B,QAAgD,SAAhD;AAEA,MAAMC,wBAAN,SAAuCH,mBAAvC,CAA2D;EAC7C,IAARI,QAAQA,CAAA,EAAG;IACb,OAAO,IAAP;EACD;EAEDC,UAAUA,CAACC,EAAD,EAAqB;IAC7B,MAAMD,UAAN,CAAiBC,EAAjB;IACA,IAAI,CAACA,EAAE,CAACC,OAAR,EAAiB;MAEf,IAAIN,mBAAmB,CAACC,UAAU,CAAC;QAAEM,CAAC,EAAEF,EAAE,CAACG,MAAR;QAAgBC,CAAC,EAAEJ,EAAE,CAACK;MAAtB,CAAD,CAAX,EAA6C,EAA7C,CAAvB,EAAyE;QAEvE,IAAI,KAAKC,MAAL,CAAYC,oBAAhB,EAAsC;UACpC,MAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAcjB,WAAW,CAACkB,QAAZ,EAAd,EAAsCC,MAAtC,CACdC,OAAD,IAAa;YACX,MAAM;cAAEC,UAAF;cAAcC,IAAd;cAAoBC;YAApB,IAAyCH,OAA/C;YACA,OAEEC,UAAU,KAAK,KAAKA,UAApB,IAEAE,gBAFA,IAIAH,OAAO,YAAYrB,sBAJnB,IAMAuB,IANA,IAQA,KAAKA,IAAL,CAAUE,QAAV,CAAmBF,IAAnB;UAEH,CAfc,CAAjB;UAkBA,KAAK,MAAMF,OAAX,IAAsBL,QAAtB,EAAgC;YAE9BK,OAAO,CAACK,eAAR,CAAwBlB,EAAxB;UACD;QACF;MACF;IACF;EACF;AArCwD;AAwC3D,eAAeH,wBAAf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}