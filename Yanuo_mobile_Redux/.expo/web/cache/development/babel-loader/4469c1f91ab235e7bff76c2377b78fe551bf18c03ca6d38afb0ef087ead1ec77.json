{"ast":null,"code":"export function resolveBlurhashString(str) {\n  const [blurhash, width, height] = str.replace(/^blurhash:\\//, '').split('/');\n  return {\n    uri: blurhash,\n    width: parseInt(width, 10) || 16,\n    height: parseInt(height, 10) || 16\n  };\n}\nexport function resolveThumbhashString(str) {\n  const hash = str.replace(/^thumbhash:\\//, '');\n  return {\n    uri: 'thumbhash:/' + hash\n  };\n}","map":{"version":3,"names":["resolveBlurhashString","str","blurhash","width","height","replace","split","uri","parseInt","resolveThumbhashString","hash"],"sources":["C:\\Users\\DinhPhongIUH\\Desktop\\nhap\\Yanuo_mobile_Redux\\node_modules\\expo-image\\src\\utils\\resolveHashString.web.tsx"],"sourcesContent":["import { ImageSource } from '../Image.types';\n\n/**\n * Converts a string in blurhash format (`blurhash:/<hash>/<width>/<height>`\n * or <hash>/<width>/<height>) into an `ImageSource`.\n * Note: The blurhash:/ uri scheme is removed, because for backward compatibility reasons,\n * strings without a scheme are assumed to be `blurhash` by default.\n *\n * @return An ImageSource representing the provided blurhash.\n * */\nexport function resolveBlurhashString(str: string): ImageSource {\n  const [blurhash, width, height] = str.replace(/^blurhash:\\//, '').split('/');\n  return {\n    uri: blurhash,\n    width: parseInt(width, 10) || 16,\n    height: parseInt(height, 10) || 16,\n  };\n}\n\n/**\n * Converts a string in thumbhash format (`thumbhash:/<hash>` or `<hash>`)\n * into an `ImageSource`.\n * Note: Unlike the `resolveBlurhashString` the `thumbhash:/` scheme has to be present,\n * as the scheme has to be explicitly stated to be interpreted a `thumbhash` source.\n *\n * @return An ImageSource representing the provided thumbhash.\n * */\nexport function resolveThumbhashString(str: string): ImageSource {\n  const hash = str.replace(/^thumbhash:\\//, '');\n  return {\n    uri: 'thumbhash:/' + hash,\n  };\n}\n"],"mappings":"AAUA,OAAM,SAAUA,qBAAqBA,CAACC,GAAW;EAC/C,MAAM,CAACC,QAAQ,EAAEC,KAAK,EAAEC,MAAM,CAAC,GAAGH,GAAG,CAACI,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;EAC5E,OAAO;IACLC,GAAG,EAAEL,QAAQ;IACbC,KAAK,EAAEK,QAAQ,CAACL,KAAK,EAAE,EAAE,CAAC,IAAI,EAAE;IAChCC,MAAM,EAAEI,QAAQ,CAACJ,MAAM,EAAE,EAAE,CAAC,IAAI;GACjC;AACH;AAUA,OAAM,SAAUK,sBAAsBA,CAACR,GAAW;EAChD,MAAMS,IAAI,GAAGT,GAAG,CAACI,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC;EAC7C,OAAO;IACLE,GAAG,EAAE,aAAa,GAAGG;GACtB;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}