{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nconst _excluded = [\"shouldActivateOnStart\", \"disallowInterruption\", \"shouldCancelWhenOutside\", \"minDurationMs\", \"maxDist\", \"minPointers\", \"maxPointers\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty2(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport Hammer from '@egjs/hammerjs';\nimport { State } from '../State';\nimport { CONTENT_TOUCHES_DELAY, CONTENT_TOUCHES_QUICK_TAP_END_DELAY } from './constants';\nimport DiscreteGestureHandler from './DiscreteGestureHandler';\nimport { fireAfterInterval, isValidNumber, isnan } from './utils';\nclass PressGestureHandler extends DiscreteGestureHandler {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"visualFeedbackTimer\", void 0);\n    _defineProperty(this, \"initialEvent\", null);\n    _defineProperty(this, \"shouldDelayTouches\", true);\n  }\n  get name() {\n    return 'press';\n  }\n  get minDurationMs() {\n    return isnan(this.config.minDurationMs) ? 5 : this.config.minDurationMs;\n  }\n  get maxDist() {\n    return isnan(this.config.maxDist) ? 9 : this.config.maxDist;\n  }\n  get NativeGestureClass() {\n    return Hammer.Press;\n  }\n  simulateCancelEvent(inputData) {\n    this.hasGestureFailed = true;\n    this.cancelEvent(inputData);\n  }\n  updateHasCustomActivationCriteria({\n    shouldCancelWhenOutside,\n    maxDistSq\n  }) {\n    return shouldCancelWhenOutside || !isValidNumber(maxDistSq);\n  }\n  getState(type) {\n    return {\n      [Hammer.INPUT_START]: State.BEGAN,\n      [Hammer.INPUT_MOVE]: State.ACTIVE,\n      [Hammer.INPUT_END]: State.END,\n      [Hammer.INPUT_CANCEL]: State.CANCELLED\n    }[type];\n  }\n  getConfig() {\n    if (!this.hasCustomActivationCriteria) {\n      return {\n        shouldCancelWhenOutside: true,\n        maxDistSq: 10\n      };\n    }\n    return this.config;\n  }\n  getHammerConfig() {\n    return _objectSpread(_objectSpread({}, super.getHammerConfig()), {}, {\n      time: this.minDurationMs\n    });\n  }\n  onGestureActivated(ev) {\n    this.onGestureStart(ev);\n  }\n  shouldDelayTouchForEvent({\n    pointerType\n  }) {\n    return this.shouldDelayTouches && pointerType === 'touch';\n  }\n  onGestureStart(ev) {\n    this.isGestureRunning = true;\n    clearTimeout(this.visualFeedbackTimer);\n    this.initialEvent = ev;\n    this.visualFeedbackTimer = fireAfterInterval(() => {\n      this.sendGestureStartedEvent(this.initialEvent);\n      this.initialEvent = null;\n    }, this.shouldDelayTouchForEvent(ev) && CONTENT_TOUCHES_DELAY);\n  }\n  sendGestureStartedEvent(ev) {\n    clearTimeout(this.visualFeedbackTimer);\n    this.visualFeedbackTimer = null;\n    this.sendEvent(_objectSpread(_objectSpread({}, ev), {}, {\n      eventType: Hammer.INPUT_MOVE,\n      isFirst: true\n    }));\n  }\n  forceInvalidate(event) {\n    super.forceInvalidate(event);\n    clearTimeout(this.visualFeedbackTimer);\n    this.visualFeedbackTimer = null;\n    this.initialEvent = null;\n  }\n  onRawEvent(ev) {\n    super.onRawEvent(ev);\n    if (this.isGestureRunning) {\n      if (ev.isFinal) {\n        let timeout;\n        if (this.visualFeedbackTimer) {\n          timeout = CONTENT_TOUCHES_QUICK_TAP_END_DELAY;\n          this.sendGestureStartedEvent(this.initialEvent);\n          this.initialEvent = null;\n        }\n        fireAfterInterval(() => {\n          this.sendEvent(_objectSpread(_objectSpread({}, ev), {}, {\n            eventType: Hammer.INPUT_END,\n            isFinal: true\n          }));\n          this.onGestureEnded();\n        }, timeout);\n      } else {\n        this.sendEvent(_objectSpread(_objectSpread({}, ev), {}, {\n          eventType: Hammer.INPUT_MOVE,\n          isFinal: false\n        }));\n      }\n    }\n  }\n  updateGestureConfig(_ref) {\n    let {\n        shouldActivateOnStart = false,\n        disallowInterruption = false,\n        shouldCancelWhenOutside = true,\n        minDurationMs = Number.NaN,\n        maxDist = Number.NaN,\n        minPointers = 1,\n        maxPointers = 1\n      } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n    return super.updateGestureConfig(_objectSpread({\n      shouldActivateOnStart,\n      disallowInterruption,\n      shouldCancelWhenOutside,\n      minDurationMs,\n      maxDist,\n      minPointers,\n      maxPointers\n    }, props));\n  }\n}\nexport default PressGestureHandler;","map":{"version":3,"names":["Hammer","State","CONTENT_TOUCHES_DELAY","CONTENT_TOUCHES_QUICK_TAP_END_DELAY","DiscreteGestureHandler","fireAfterInterval","isValidNumber","isnan","PressGestureHandler","constructor","args","_defineProperty","name","minDurationMs","config","maxDist","NativeGestureClass","Press","simulateCancelEvent","inputData","hasGestureFailed","cancelEvent","updateHasCustomActivationCriteria","shouldCancelWhenOutside","maxDistSq","getState","type","INPUT_START","BEGAN","INPUT_MOVE","ACTIVE","INPUT_END","END","INPUT_CANCEL","CANCELLED","getConfig","hasCustomActivationCriteria","getHammerConfig","_objectSpread","time","onGestureActivated","ev","onGestureStart","shouldDelayTouchForEvent","pointerType","shouldDelayTouches","isGestureRunning","clearTimeout","visualFeedbackTimer","initialEvent","sendGestureStartedEvent","sendEvent","eventType","isFirst","forceInvalidate","event","onRawEvent","isFinal","timeout","onGestureEnded","updateGestureConfig","_ref","shouldActivateOnStart","disallowInterruption","Number","NaN","minPointers","maxPointers","props","_objectWithoutProperties","_excluded"],"sources":["C:\\Users\\DinhPhongIUH\\Desktop\\nhap\\Yanuo_mobile_Redux\\node_modules\\react-native-gesture-handler\\lib\\module\\web_hammer\\PressGestureHandler.ts"],"sourcesContent":["import Hammer from '@egjs/hammerjs';\n\nimport { State } from '../State';\nimport {\n  CONTENT_TOUCHES_DELAY,\n  CONTENT_TOUCHES_QUICK_TAP_END_DELAY,\n  HammerInputNames,\n} from './constants';\nimport DiscreteGestureHandler from './DiscreteGestureHandler';\nimport { Config, HammerInputExt } from './GestureHandler';\nimport { fireAfterInterval, isValidNumber, isnan } from './utils';\n\nclass PressGestureHandler extends DiscreteGestureHandler {\n  private visualFeedbackTimer: any;\n  private initialEvent: HammerInputExt | null = null;\n  get name() {\n    return 'press';\n  }\n\n  get minDurationMs() {\n    // @ts-ignore FIXME(TS)\n    return isnan(this.config.minDurationMs) ? 5 : this.config.minDurationMs;\n  }\n\n  get maxDist() {\n    return isnan(this.config.maxDist) ? 9 : this.config.maxDist;\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Press;\n  }\n\n  shouldDelayTouches = true;\n\n  simulateCancelEvent(inputData: HammerInputExt) {\n    // Long press never starts so we can't rely on the running event boolean.\n    this.hasGestureFailed = true;\n    this.cancelEvent(inputData);\n  }\n\n  updateHasCustomActivationCriteria({\n    shouldCancelWhenOutside,\n    maxDistSq,\n  }: Config & { shouldCancelWhenOutside: boolean }) {\n    return shouldCancelWhenOutside || !isValidNumber(maxDistSq);\n  }\n\n  getState(type: keyof typeof HammerInputNames): State {\n    return {\n      [Hammer.INPUT_START]: State.BEGAN,\n      [Hammer.INPUT_MOVE]: State.ACTIVE,\n      [Hammer.INPUT_END]: State.END,\n      [Hammer.INPUT_CANCEL]: State.CANCELLED,\n    }[type];\n  }\n\n  getConfig() {\n    if (!this.hasCustomActivationCriteria) {\n      // Default config\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\n      return {\n        shouldCancelWhenOutside: true,\n        maxDistSq: 10,\n      };\n    }\n    return this.config;\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      // threshold: this.maxDist,\n      time: this.minDurationMs,\n    };\n  }\n\n  onGestureActivated(ev: HammerInputExt) {\n    this.onGestureStart(ev);\n  }\n\n  shouldDelayTouchForEvent({ pointerType }: HammerInputExt) {\n    // Don't disable event for mouse input\n    return this.shouldDelayTouches && pointerType === 'touch';\n  }\n\n  onGestureStart(ev: HammerInputExt) {\n    this.isGestureRunning = true;\n    clearTimeout(this.visualFeedbackTimer);\n    this.initialEvent = ev;\n    this.visualFeedbackTimer = fireAfterInterval(() => {\n      this.sendGestureStartedEvent(this.initialEvent as HammerInputExt);\n      this.initialEvent = null;\n    }, this.shouldDelayTouchForEvent(ev) && CONTENT_TOUCHES_DELAY);\n  }\n\n  sendGestureStartedEvent(ev: HammerInputExt) {\n    clearTimeout(this.visualFeedbackTimer);\n    this.visualFeedbackTimer = null;\n    this.sendEvent({\n      ...ev,\n      eventType: Hammer.INPUT_MOVE,\n      isFirst: true,\n    });\n  }\n\n  forceInvalidate(event: HammerInputExt) {\n    super.forceInvalidate(event);\n    clearTimeout(this.visualFeedbackTimer);\n    this.visualFeedbackTimer = null;\n    this.initialEvent = null;\n  }\n\n  onRawEvent(ev: HammerInputExt) {\n    super.onRawEvent(ev);\n    if (this.isGestureRunning) {\n      if (ev.isFinal) {\n        let timeout;\n        if (this.visualFeedbackTimer) {\n          // Aesthetic timing for a quick tap.\n          // We haven't activated the tap right away to emulate iOS `delaysContentTouches`\n          // Now we must send the initial activation event and wait a set amount of time before firing the end event.\n          timeout = CONTENT_TOUCHES_QUICK_TAP_END_DELAY;\n          this.sendGestureStartedEvent(this.initialEvent as HammerInputExt);\n          this.initialEvent = null;\n        }\n        fireAfterInterval(() => {\n          this.sendEvent({\n            ...ev,\n            eventType: Hammer.INPUT_END,\n            isFinal: true,\n          });\n          // @ts-ignore -- this should explicitly support undefined\n          this.onGestureEnded();\n        }, timeout);\n      } else {\n        this.sendEvent({\n          ...ev,\n          eventType: Hammer.INPUT_MOVE,\n          isFinal: false,\n        });\n      }\n    }\n  }\n\n  updateGestureConfig({\n    shouldActivateOnStart = false,\n    disallowInterruption = false,\n    shouldCancelWhenOutside = true,\n    minDurationMs = Number.NaN,\n    maxDist = Number.NaN,\n    minPointers = 1,\n    maxPointers = 1,\n    ...props\n  }) {\n    return super.updateGestureConfig({\n      shouldActivateOnStart,\n      disallowInterruption,\n      shouldCancelWhenOutside,\n      minDurationMs,\n      maxDist,\n      minPointers,\n      maxPointers,\n      ...props,\n    });\n  }\n}\nexport default PressGestureHandler;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}