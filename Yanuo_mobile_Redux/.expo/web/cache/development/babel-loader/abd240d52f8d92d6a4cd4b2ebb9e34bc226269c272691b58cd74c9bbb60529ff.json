{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nconst _excluded = [\"enabled\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty2(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { State } from '../../State';\nimport { DEFAULT_TOUCH_SLOP } from '../constants';\nimport GestureHandler from './GestureHandler';\nimport ScaleGestureDetector from '../detectors/ScaleGestureDetector';\nexport default class PinchGestureHandler extends GestureHandler {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"scale\", 1);\n    _defineProperty(this, \"velocity\", 0);\n    _defineProperty(this, \"startingSpan\", 0);\n    _defineProperty(this, \"spanSlop\", DEFAULT_TOUCH_SLOP);\n    _defineProperty(this, \"scaleDetectorListener\", {\n      onScaleBegin: detector => {\n        this.startingSpan = detector.getCurrentSpan();\n        return true;\n      },\n      onScale: detector => {\n        const prevScaleFactor = this.scale;\n        this.scale *= detector.getScaleFactor(this.tracker.getTrackedPointersCount());\n        const delta = detector.getTimeDelta();\n        if (delta > 0) {\n          this.velocity = (this.scale - prevScaleFactor) / delta;\n        }\n        if (Math.abs(this.startingSpan - detector.getCurrentSpan()) >= this.spanSlop && this.currentState === State.BEGAN) {\n          this.activate();\n        }\n        return true;\n      },\n      onScaleEnd: _detector => {}\n    });\n    _defineProperty(this, \"scaleGestureDetector\", new ScaleGestureDetector(this.scaleDetectorListener));\n  }\n  init(ref, propsRef) {\n    super.init(ref, propsRef);\n    this.setShouldCancelWhenOutside(false);\n  }\n  updateGestureConfig(_ref) {\n    let {\n        enabled = true\n      } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n    super.updateGestureConfig(_objectSpread({\n      enabled: enabled\n    }, props));\n  }\n  transformNativeEvent() {\n    return {\n      focalX: this.scaleGestureDetector.getFocusX(),\n      focalY: this.scaleGestureDetector.getFocusY(),\n      velocity: this.velocity,\n      scale: this.scale\n    };\n  }\n  onPointerDown(event) {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n  }\n  onPointerAdd(event) {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n    this.tryBegin();\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n  }\n  onPointerUp(event) {\n    super.onPointerUp(event);\n    this.tracker.removeFromTracker(event.pointerId);\n    if (this.currentState !== State.ACTIVE) {\n      return;\n    }\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    if (this.currentState === State.ACTIVE) {\n      this.end();\n    } else {\n      this.fail();\n    }\n  }\n  onPointerRemove(event) {\n    super.onPointerRemove(event);\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    this.tracker.removeFromTracker(event.pointerId);\n    if (this.currentState === State.ACTIVE && this.tracker.getTrackedPointersCount() < 2) {\n      this.end();\n    }\n  }\n  onPointerMove(event) {\n    if (this.tracker.getTrackedPointersCount() < 2) {\n      return;\n    }\n    this.tracker.track(event);\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    super.onPointerMove(event);\n  }\n  onPointerOutOfBounds(event) {\n    if (this.tracker.getTrackedPointersCount() < 2) {\n      return;\n    }\n    this.tracker.track(event);\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    super.onPointerOutOfBounds(event);\n  }\n  tryBegin() {\n    if (this.currentState !== State.UNDETERMINED) {\n      return;\n    }\n    this.resetProgress();\n    this.begin();\n  }\n  activate(force) {\n    if (this.currentState !== State.ACTIVE) {\n      this.resetProgress();\n    }\n    super.activate(force);\n  }\n  onReset() {\n    this.resetProgress();\n  }\n  resetProgress() {\n    if (this.currentState === State.ACTIVE) {\n      return;\n    }\n    this.velocity = 0;\n    this.scale = 1;\n  }\n}","map":{"version":3,"names":["State","DEFAULT_TOUCH_SLOP","GestureHandler","ScaleGestureDetector","PinchGestureHandler","constructor","args","_defineProperty","onScaleBegin","detector","startingSpan","getCurrentSpan","onScale","prevScaleFactor","scale","getScaleFactor","tracker","getTrackedPointersCount","delta","getTimeDelta","velocity","Math","abs","spanSlop","currentState","BEGAN","activate","onScaleEnd","_detector","scaleDetectorListener","init","ref","propsRef","setShouldCancelWhenOutside","updateGestureConfig","_ref","enabled","props","_objectWithoutProperties","_excluded","_objectSpread","transformNativeEvent","focalX","scaleGestureDetector","getFocusX","focalY","getFocusY","onPointerDown","event","addToTracker","onPointerAdd","tryBegin","onTouchEvent","onPointerUp","removeFromTracker","pointerId","ACTIVE","end","fail","onPointerRemove","onPointerMove","track","onPointerOutOfBounds","UNDETERMINED","resetProgress","begin","force","onReset"],"sources":["C:\\Users\\DinhPhongIUH\\Desktop\\nhap\\Yanuo_mobile_Redux\\node_modules\\react-native-gesture-handler\\lib\\module\\web\\handlers\\PinchGestureHandler.ts"],"sourcesContent":["import { State } from '../../State';\nimport { DEFAULT_TOUCH_SLOP } from '../constants';\nimport { AdaptedEvent, Config } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\nimport ScaleGestureDetector, {\n  ScaleGestureListener,\n} from '../detectors/ScaleGestureDetector';\n\nexport default class PinchGestureHandler extends GestureHandler {\n  private scale = 1;\n  private velocity = 0;\n\n  private startingSpan = 0;\n  private spanSlop = DEFAULT_TOUCH_SLOP;\n\n  private scaleDetectorListener: ScaleGestureListener = {\n    onScaleBegin: (detector: ScaleGestureDetector): boolean => {\n      this.startingSpan = detector.getCurrentSpan();\n      return true;\n    },\n    onScale: (detector: ScaleGestureDetector): boolean => {\n      const prevScaleFactor: number = this.scale;\n      this.scale *= detector.getScaleFactor(\n        this.tracker.getTrackedPointersCount()\n      );\n\n      const delta = detector.getTimeDelta();\n      if (delta > 0) {\n        this.velocity = (this.scale - prevScaleFactor) / delta;\n      }\n\n      if (\n        Math.abs(this.startingSpan - detector.getCurrentSpan()) >=\n          this.spanSlop &&\n        this.currentState === State.BEGAN\n      ) {\n        this.activate();\n      }\n      return true;\n    },\n    onScaleEnd: (\n      _detector: ScaleGestureDetector\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n    ): void => {},\n  };\n\n  private scaleGestureDetector: ScaleGestureDetector = new ScaleGestureDetector(\n    this.scaleDetectorListener\n  );\n\n  public init(ref: number, propsRef: React.RefObject<unknown>) {\n    super.init(ref, propsRef);\n\n    this.setShouldCancelWhenOutside(false);\n  }\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n  }\n\n  protected transformNativeEvent() {\n    return {\n      focalX: this.scaleGestureDetector.getFocusX(),\n      focalY: this.scaleGestureDetector.getFocusY(),\n      velocity: this.velocity,\n      scale: this.scale,\n    };\n  }\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n    this.tryBegin();\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.tracker.removeFromTracker(event.pointerId);\n    if (this.currentState !== State.ACTIVE) {\n      return;\n    }\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n\n    if (this.currentState === State.ACTIVE) {\n      this.end();\n    } else {\n      this.fail();\n    }\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    this.tracker.removeFromTracker(event.pointerId);\n\n    if (\n      this.currentState === State.ACTIVE &&\n      this.tracker.getTrackedPointersCount() < 2\n    ) {\n      this.end();\n    }\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    if (this.tracker.getTrackedPointersCount() < 2) {\n      return;\n    }\n    this.tracker.track(event);\n\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    super.onPointerMove(event);\n  }\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    if (this.tracker.getTrackedPointersCount() < 2) {\n      return;\n    }\n    this.tracker.track(event);\n\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    super.onPointerOutOfBounds(event);\n  }\n\n  private tryBegin(): void {\n    if (this.currentState !== State.UNDETERMINED) {\n      return;\n    }\n\n    this.resetProgress();\n    this.begin();\n  }\n\n  public activate(force?: boolean): void {\n    if (this.currentState !== State.ACTIVE) {\n      this.resetProgress();\n    }\n\n    super.activate(force);\n  }\n\n  protected onReset(): void {\n    this.resetProgress();\n  }\n\n  protected resetProgress(): void {\n    if (this.currentState === State.ACTIVE) {\n      return;\n    }\n    this.velocity = 0;\n    this.scale = 1;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,KAAT,QAAsB,aAAtB;AACA,SAASC,kBAAT,QAAmC,cAAnC;AAGA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,oBAAP,MAEO,mCAFP;AAIA,eAAe,MAAMC,mBAAN,SAAkCF,cAAlC,CAAiD;EAAAG,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAAC,eAAA,gBAC9C,CAD8C;IAAAA,eAAA,mBAE3C,CAF2C;IAAAA,eAAA,uBAIvC,CAJuC;IAAAA,eAAA,mBAK3CN,kBAL2C;IAAAM,eAAA,gCAOR;MACpDC,YAAY,EAAGC,QAAD,IAA6C;QACzD,KAAKC,YAAL,GAAoBD,QAAQ,CAACE,cAAT,EAApB;QACA,OAAO,IAAP;MACD,CAJmD;MAKpDC,OAAO,EAAGH,QAAD,IAA6C;QACpD,MAAMI,eAAuB,GAAG,KAAKC,KAArC;QACA,KAAKA,KAAL,IAAcL,QAAQ,CAACM,cAAT,CACZ,KAAKC,OAAL,CAAaC,uBAAb,EADY,CAAd;QAIA,MAAMC,KAAK,GAAGT,QAAQ,CAACU,YAAT,EAAd;QACA,IAAID,KAAK,GAAG,CAAZ,EAAe;UACb,KAAKE,QAAL,GAAgB,CAAC,KAAKN,KAAL,GAAaD,eAAd,IAAiCK,KAAjD;QACD;QAED,IACEG,IAAI,CAACC,GAAL,CAAS,KAAKZ,YAAL,GAAoBD,QAAQ,CAACE,cAAT,EAA7B,KACE,KAAKY,QADP,IAEA,KAAKC,YAAL,KAAsBxB,KAAK,CAACyB,KAH9B,EAIE;UACA,KAAKC,QAAL;QACD;QACD,OAAO,IAAP;MACD,CAxBmD;MAyBpDC,UAAU,EACRC,SADU,IAGD,CAAE;IA5BuC,CAPQ;IAAArB,eAAA,+BAsCT,IAAIJ,oBAAJ,CACnD,KAAK0B,qBAD8C,CAtCS;EAAA;EA0CvDC,IAAIA,CAACC,GAAD,EAAcC,QAAd,EAAkD;IAC3D,MAAMF,IAAN,CAAWC,GAAX,EAAgBC,QAAhB;IAEA,KAAKC,0BAAL,CAAgC,KAAhC;EACD;EAEMC,mBAAmBA,CAAAC,IAAA,EAA6C;IAAA,IAA5C;QAAEC,OAAO,GAAG;MAAZ,CAAD,GAAAD,IAAA;MAAsBE,KAAA,GAAAC,wBAAA,CAAAH,IAAA,EAAAI,SAAA;IAC9C,MAAML,mBAAN,CAAAM,aAAA;MAA4BJ,OAAO,EAAEA;IAAX,GAAuBC,KAAA,CAAjD;EACD;EAESI,oBAAoBA,CAAA,EAAG;IAC/B,OAAO;MACLC,MAAM,EAAE,KAAKC,oBAAL,CAA0BC,SAA1B,EADH;MAELC,MAAM,EAAE,KAAKF,oBAAL,CAA0BG,SAA1B,EAFH;MAGL1B,QAAQ,EAAE,KAAKA,QAHV;MAILN,KAAK,EAAE,KAAKA;IAJP,CAAP;EAMD;EAESiC,aAAaA,CAACC,KAAD,EAA4B;IACjD,KAAKhC,OAAL,CAAaiC,YAAb,CAA0BD,KAA1B;IACA,MAAMD,aAAN,CAAoBC,KAApB;EACD;EAESE,YAAYA,CAACF,KAAD,EAA4B;IAChD,KAAKhC,OAAL,CAAaiC,YAAb,CAA0BD,KAA1B;IACA,MAAME,YAAN,CAAmBF,KAAnB;IACA,KAAKG,QAAL;IACA,KAAKR,oBAAL,CAA0BS,YAA1B,CAAuCJ,KAAvC,EAA8C,KAAKhC,OAAnD;EACD;EAESqC,WAAWA,CAACL,KAAD,EAA4B;IAC/C,MAAMK,WAAN,CAAkBL,KAAlB;IACA,KAAKhC,OAAL,CAAasC,iBAAb,CAA+BN,KAAK,CAACO,SAArC;IACA,IAAI,KAAK/B,YAAL,KAAsBxB,KAAK,CAACwD,MAAhC,EAAwC;MACtC;IACD;IACD,KAAKb,oBAAL,CAA0BS,YAA1B,CAAuCJ,KAAvC,EAA8C,KAAKhC,OAAnD;IAEA,IAAI,KAAKQ,YAAL,KAAsBxB,KAAK,CAACwD,MAAhC,EAAwC;MACtC,KAAKC,GAAL;IACD,CAFD,MAEO;MACL,KAAKC,IAAL;IACD;EACF;EAESC,eAAeA,CAACX,KAAD,EAA4B;IACnD,MAAMW,eAAN,CAAsBX,KAAtB;IACA,KAAKL,oBAAL,CAA0BS,YAA1B,CAAuCJ,KAAvC,EAA8C,KAAKhC,OAAnD;IACA,KAAKA,OAAL,CAAasC,iBAAb,CAA+BN,KAAK,CAACO,SAArC;IAEA,IACE,KAAK/B,YAAL,KAAsBxB,KAAK,CAACwD,MAA5B,IACA,KAAKxC,OAAL,CAAaC,uBAAb,KAAyC,CAF3C,EAGE;MACA,KAAKwC,GAAL;IACD;EACF;EAESG,aAAaA,CAACZ,KAAD,EAA4B;IACjD,IAAI,KAAKhC,OAAL,CAAaC,uBAAb,KAAyC,CAA7C,EAAgD;MAC9C;IACD;IACD,KAAKD,OAAL,CAAa6C,KAAb,CAAmBb,KAAnB;IAEA,KAAKL,oBAAL,CAA0BS,YAA1B,CAAuCJ,KAAvC,EAA8C,KAAKhC,OAAnD;IACA,MAAM4C,aAAN,CAAoBZ,KAApB;EACD;EACSc,oBAAoBA,CAACd,KAAD,EAA4B;IACxD,IAAI,KAAKhC,OAAL,CAAaC,uBAAb,KAAyC,CAA7C,EAAgD;MAC9C;IACD;IACD,KAAKD,OAAL,CAAa6C,KAAb,CAAmBb,KAAnB;IAEA,KAAKL,oBAAL,CAA0BS,YAA1B,CAAuCJ,KAAvC,EAA8C,KAAKhC,OAAnD;IACA,MAAM8C,oBAAN,CAA2Bd,KAA3B;EACD;EAEOG,QAAQA,CAAA,EAAS;IACvB,IAAI,KAAK3B,YAAL,KAAsBxB,KAAK,CAAC+D,YAAhC,EAA8C;MAC5C;IACD;IAED,KAAKC,aAAL;IACA,KAAKC,KAAL;EACD;EAEMvC,QAAQA,CAACwC,KAAD,EAAwB;IACrC,IAAI,KAAK1C,YAAL,KAAsBxB,KAAK,CAACwD,MAAhC,EAAwC;MACtC,KAAKQ,aAAL;IACD;IAED,MAAMtC,QAAN,CAAewC,KAAf;EACD;EAESC,OAAOA,CAAA,EAAS;IACxB,KAAKH,aAAL;EACD;EAESA,aAAaA,CAAA,EAAS;IAC9B,IAAI,KAAKxC,YAAL,KAAsBxB,KAAK,CAACwD,MAAhC,EAAwC;MACtC;IACD;IACD,KAAKpC,QAAL,GAAgB,CAAhB;IACA,KAAKN,KAAL,GAAa,CAAb;EACD;AAnJ6D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}