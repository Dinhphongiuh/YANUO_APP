{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty2(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { ContinousBaseGesture } from './gesture';\nconst _worklet_7529687435058_init_data = {\n  code: \"function changeEventCalculator(current,previous){let changePayload;if(previous===undefined){changePayload={changeX:current.translationX,changeY:current.translationY};}else{changePayload={changeX:current.translationX-previous.translationX,changeY:current.translationY-previous.translationY};}return{...current,...changePayload};}\",\n  location: \"C:\\\\Users\\\\DinhPhongIUH\\\\Desktop\\\\nhap\\\\Yanuo_mobile_Redux\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\panGesture.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"changeEventCalculator\\\",\\\"current\\\",\\\"previous\\\",\\\"changePayload\\\",\\\"undefined\\\",\\\"changeX\\\",\\\"translationX\\\",\\\"changeY\\\",\\\"translationY\\\"],\\\"sources\\\":[\\\"C:/Users/DinhPhongIUH/Desktop/nhap/Yanuo_mobile_Redux/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/panGesture.js\\\"],\\\"mappings\\\":\\\"AAIA,SAAAA,qBAASA,CAAsBC,OAAA,CAAOC,QAAE,CAAQ,CAG9C,GAAI,CAAAC,aAAa,CAEjB,GAAID,QAAQ,GAAKE,SAAS,CAAE,CAC1BD,aAAa,CAAG,CACdE,OAAO,CAAEJ,OAAO,CAACK,YAAY,CAC7BC,OAAO,CAAEN,OAAO,CAACO,YACnB,CAAC,CACH,CAAC,IAAM,CACLL,aAAa,CAAG,CACdE,OAAO,CAAEJ,OAAO,CAACK,YAAY,CAAGJ,QAAQ,CAACI,YAAY,CACrDC,OAAO,CAAEN,OAAO,CAACO,YAAY,CAAGN,QAAQ,CAACM,YAC3C,CAAC,CACH,CAEA,MAAO,CAAE,GAAGP,OAAO,CACjB,GAAGE,aACL,CAAC,CACH\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.10.1\"\n};\nconst changeEventCalculator = function () {\n  const _e = [new global.Error(), 1, -27];\n  const changeEventCalculator = function (current, previous) {\n    let changePayload;\n    if (previous === undefined) {\n      changePayload = {\n        changeX: current.translationX,\n        changeY: current.translationY\n      };\n    } else {\n      changePayload = {\n        changeX: current.translationX - previous.translationX,\n        changeY: current.translationY - previous.translationY\n      };\n    }\n    return _objectSpread(_objectSpread({}, current), changePayload);\n  };\n  changeEventCalculator.__closure = {};\n  changeEventCalculator.__workletHash = 7529687435058;\n  changeEventCalculator.__initData = _worklet_7529687435058_init_data;\n  changeEventCalculator.__stackDetails = _e;\n  return changeEventCalculator;\n}();\nexport class PanGesture extends ContinousBaseGesture {\n  constructor() {\n    super();\n    _defineProperty(this, \"config\", {});\n    this.handlerName = 'PanGestureHandler';\n  }\n  activeOffsetY(offset) {\n    if (Array.isArray(offset)) {\n      this.config.activeOffsetYStart = offset[0];\n      this.config.activeOffsetYEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.activeOffsetYStart = offset;\n    } else {\n      this.config.activeOffsetYEnd = offset;\n    }\n    return this;\n  }\n  activeOffsetX(offset) {\n    if (Array.isArray(offset)) {\n      this.config.activeOffsetXStart = offset[0];\n      this.config.activeOffsetXEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.activeOffsetXStart = offset;\n    } else {\n      this.config.activeOffsetXEnd = offset;\n    }\n    return this;\n  }\n  failOffsetY(offset) {\n    if (Array.isArray(offset)) {\n      this.config.failOffsetYStart = offset[0];\n      this.config.failOffsetYEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.failOffsetYStart = offset;\n    } else {\n      this.config.failOffsetYEnd = offset;\n    }\n    return this;\n  }\n  failOffsetX(offset) {\n    if (Array.isArray(offset)) {\n      this.config.failOffsetXStart = offset[0];\n      this.config.failOffsetXEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.failOffsetXStart = offset;\n    } else {\n      this.config.failOffsetXEnd = offset;\n    }\n    return this;\n  }\n  minPointers(minPointers) {\n    this.config.minPointers = minPointers;\n    return this;\n  }\n  maxPointers(maxPointers) {\n    this.config.maxPointers = maxPointers;\n    return this;\n  }\n  minDistance(distance) {\n    this.config.minDist = distance;\n    return this;\n  }\n  minVelocity(velocity) {\n    this.config.minVelocity = velocity;\n    return this;\n  }\n  minVelocityX(velocity) {\n    this.config.minVelocityX = velocity;\n    return this;\n  }\n  minVelocityY(velocity) {\n    this.config.minVelocityY = velocity;\n    return this;\n  }\n  averageTouches(value) {\n    this.config.avgTouches = value;\n    return this;\n  }\n  enableTrackpadTwoFingerGesture(value) {\n    this.config.enableTrackpadTwoFingerGesture = value;\n    return this;\n  }\n  activateAfterLongPress(duration) {\n    this.config.activateAfterLongPress = duration;\n    return this;\n  }\n  onChange(callback) {\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}","map":{"version":3,"names":["ContinousBaseGesture","_worklet_7529687435058_init_data","code","location","sourceMap","version","changeEventCalculator","_e","global","Error","current","previous","changePayload","undefined","changeX","translationX","changeY","translationY","_objectSpread","__closure","__workletHash","__initData","__stackDetails","PanGesture","constructor","_defineProperty","handlerName","activeOffsetY","offset","Array","isArray","config","activeOffsetYStart","activeOffsetYEnd","activeOffsetX","activeOffsetXStart","activeOffsetXEnd","failOffsetY","failOffsetYStart","failOffsetYEnd","failOffsetX","failOffsetXStart","failOffsetXEnd","minPointers","maxPointers","minDistance","distance","minDist","minVelocity","velocity","minVelocityX","minVelocityY","averageTouches","value","avgTouches","enableTrackpadTwoFingerGesture","activateAfterLongPress","duration","onChange","callback","handlers"],"sources":["C:\\Users\\DinhPhongIUH\\Desktop\\nhap\\Yanuo_mobile_Redux\\node_modules\\react-native-gesture-handler\\lib\\module\\handlers\\gestures\\panGesture.ts"],"sourcesContent":["import { BaseGestureConfig, ContinousBaseGesture } from './gesture';\nimport { GestureUpdateEvent } from '../gestureHandlerCommon';\nimport {\n  PanGestureConfig,\n  PanGestureHandlerEventPayload,\n} from '../PanGestureHandler';\n\nexport type PanGestureChangeEventPayload = {\n  changeX: number;\n  changeY: number;\n};\n\nfunction changeEventCalculator(\n  current: GestureUpdateEvent<PanGestureHandlerEventPayload>,\n  previous?: GestureUpdateEvent<PanGestureHandlerEventPayload>\n) {\n  'worklet';\n  let changePayload: PanGestureChangeEventPayload;\n  if (previous === undefined) {\n    changePayload = {\n      changeX: current.translationX,\n      changeY: current.translationY,\n    };\n  } else {\n    changePayload = {\n      changeX: current.translationX - previous.translationX,\n      changeY: current.translationY - previous.translationY,\n    };\n  }\n\n  return { ...current, ...changePayload };\n}\n\nexport class PanGesture extends ContinousBaseGesture<\n  PanGestureHandlerEventPayload,\n  PanGestureChangeEventPayload\n> {\n  public config: BaseGestureConfig & PanGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'PanGestureHandler';\n  }\n\n  /**\n   * Range along Y axis (in points) where fingers travels without activation of gesture.\n   * @param offset\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#activeoffsetyvalue-number--number\n   */\n  activeOffsetY(\n    offset: number | [activeOffsetYStart: number, activeOffsetYEnd: number]\n  ) {\n    if (Array.isArray(offset)) {\n      this.config.activeOffsetYStart = offset[0];\n      this.config.activeOffsetYEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.activeOffsetYStart = offset;\n    } else {\n      this.config.activeOffsetYEnd = offset;\n    }\n    return this;\n  }\n\n  /**\n   * Range along X axis (in points) where fingers travels without activation of gesture.\n   * @param offset\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#activeoffsetxvalue-number--number\n   */\n  activeOffsetX(\n    offset: number | [activeOffsetXStart: number, activeOffsetXEnd: number]\n  ) {\n    if (Array.isArray(offset)) {\n      this.config.activeOffsetXStart = offset[0];\n      this.config.activeOffsetXEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.activeOffsetXStart = offset;\n    } else {\n      this.config.activeOffsetXEnd = offset;\n    }\n    return this;\n  }\n\n  /**\n   * When the finger moves outside this range (in points) along Y axis and gesture hasn't yet activated it will fail recognizing the gesture.\n   * @param offset\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#failoffsetyvalue-number--number\n   */\n  failOffsetY(\n    offset: number | [failOffsetYStart: number, failOffsetYEnd: number]\n  ) {\n    if (Array.isArray(offset)) {\n      this.config.failOffsetYStart = offset[0];\n      this.config.failOffsetYEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.failOffsetYStart = offset;\n    } else {\n      this.config.failOffsetYEnd = offset;\n    }\n    return this;\n  }\n\n  /**\n   * When the finger moves outside this range (in points) along X axis and gesture hasn't yet activated it will fail recognizing the gesture.\n   * @param offset\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#failoffsetxvalue-number--number\n   */\n  failOffsetX(\n    offset: number | [failOffsetXStart: number, failOffsetXEnd: number]\n  ) {\n    if (Array.isArray(offset)) {\n      this.config.failOffsetXStart = offset[0];\n      this.config.failOffsetXEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.failOffsetXStart = offset;\n    } else {\n      this.config.failOffsetXEnd = offset;\n    }\n    return this;\n  }\n\n  /**\n   * A number of fingers that is required to be placed before gesture can activate. Should be a higher or equal to 0 integer.\n   * @param minPointers\n   */\n  minPointers(minPointers: number) {\n    this.config.minPointers = minPointers;\n    return this;\n  }\n\n  /**\n   * When the given number of fingers is placed on the screen and gesture hasn't yet activated it will fail recognizing the gesture.\n   * Should be a higher or equal to 0 integer.\n   * @param maxPointers\n   */\n  maxPointers(maxPointers: number) {\n    this.config.maxPointers = maxPointers;\n    return this;\n  }\n\n  /**\n   * Minimum distance the finger (or multiple finger) need to travel before the gesture activates.\n   * Expressed in points.\n   * @param distance\n   */\n  minDistance(distance: number) {\n    this.config.minDist = distance;\n    return this;\n  }\n\n  /**\n   * Minimum velocity the finger has to reach in order to activate handler.\n   * @param velocity\n   */\n  minVelocity(velocity: number) {\n    this.config.minVelocity = velocity;\n    return this;\n  }\n\n  /**\n   * Minimum velocity along X axis the finger has to reach in order to activate handler.\n   * @param velocity\n   */\n  minVelocityX(velocity: number) {\n    this.config.minVelocityX = velocity;\n    return this;\n  }\n\n  /**\n   * Minimum velocity along Y axis the finger has to reach in order to activate handler.\n   * @param velocity\n   */\n  minVelocityY(velocity: number) {\n    this.config.minVelocityY = velocity;\n    return this;\n  }\n\n  /**\n   * #### Android only\n   * Android, by default, will calculate translation values based on the position of the leading pointer (the first one that was placed on the screen).\n   * This modifier allows that behavior to be changed to the one that is default on iOS - the averaged position of all active pointers will be used to calculate the translation values.\n   * @param value\n   */\n  averageTouches(value: boolean) {\n    this.config.avgTouches = value;\n    return this;\n  }\n\n  /**\n   * #### iOS only\n   * Enables two-finger gestures on supported devices, for example iPads with trackpads.\n   * @param value\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture/#enabletrackpadtwofingergesturevalue-boolean-ios-only\n   */\n  enableTrackpadTwoFingerGesture(value: boolean) {\n    this.config.enableTrackpadTwoFingerGesture = value;\n    return this;\n  }\n\n  /**\n   * Duration in milliseconds of the LongPress gesture before Pan is allowed to activate.\n   * @param duration\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture/#activateafterlongpressduration-number\n   */\n  activateAfterLongPress(duration: number) {\n    this.config.activateAfterLongPress = duration;\n    return this;\n  }\n\n  onChange(\n    callback: (\n      event: GestureUpdateEvent<\n        PanGestureHandlerEventPayload & PanGestureChangeEventPayload\n      >\n    ) => void\n  ) {\n    // @ts-ignore TS being overprotective, PanGestureHandlerEventPayload is Record\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}\n\nexport type PanGestureType = InstanceType<typeof PanGesture>;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}