{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nconst _excluded = [\"style\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport GestureHandlerRootViewContext from '../GestureHandlerRootViewContext';\nexport default function GestureHandlerRootView(_ref) {\n  let {\n      style\n    } = _ref,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return React.createElement(GestureHandlerRootViewContext.Provider, {\n    value: true\n  }, React.createElement(View, _extends({\n    style: style !== null && style !== void 0 ? style : styles.container\n  }, rest)));\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","View","StyleSheet","GestureHandlerRootViewContext","GestureHandlerRootView","_ref","style","rest","_objectWithoutProperties","_excluded","createElement","Provider","value","_extends","styles","container","create","flex"],"sources":["C:\\Users\\DinhPhongIUH\\Desktop\\nhap\\Yanuo_mobile_Redux\\node_modules\\react-native-gesture-handler\\lib\\module\\components\\GestureHandlerRootView.tsx"],"sourcesContent":["import * as React from 'react';\nimport { PropsWithChildren } from 'react';\nimport { View, ViewProps, StyleSheet } from 'react-native';\nimport GestureHandlerRootViewContext from '../GestureHandlerRootViewContext';\n\nexport interface GestureHandlerRootViewProps\n  extends PropsWithChildren<ViewProps> {}\n\nexport default function GestureHandlerRootView({\n  style,\n  ...rest\n}: GestureHandlerRootViewProps) {\n  return (\n    <GestureHandlerRootViewContext.Provider value>\n      <View style={style ?? styles.container} {...rest} />\n    </GestureHandlerRootViewContext.Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { flex: 1 },\n});\n"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAGA,OAAOC,6BAAP,MAA0C,kCAA1C;AAKA,eAAe,SAASC,sBAATA,CAAAC,IAAA,EAGiB;EAAA,IAHe;MAC7CC;IAD6C,CAAhC,GAAAD,IAAA;IAEVE,IAAA,GAAAC,wBAAA,CAAAH,IAAA,EAAAI,SAAA;EAEH,OACET,KAAA,CAAAU,aAAA,CAACP,6BAAD,CAA+BQ,QAA/B;IAAwCC,KAAK;EAA7C,GACEZ,KAAA,CAAAU,aAAA,CAACT,IAAD,EAAAY,QAAA;IAAMP,KAAK,EAAEA,KAAF,aAAEA,KAAF,cAAEA,KAAF,GAAWQ,MAAM,CAACC;EAA7B,GAA4CR,IAA5C,EADF,CADF;AAKD;AAED,MAAMO,MAAM,GAAGZ,UAAU,CAACc,MAAX,CAAkB;EAC/BD,SAAS,EAAE;IAAEE,IAAI,EAAE;EAAR;AADoB,CAAlB,CAAf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}