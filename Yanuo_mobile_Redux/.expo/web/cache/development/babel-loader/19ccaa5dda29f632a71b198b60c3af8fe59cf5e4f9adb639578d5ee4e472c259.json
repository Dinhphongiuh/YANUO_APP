{"ast":null,"code":"import * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useAnimatedValue } from './useAnimatedValue';\nconst getTranslateX = (position, routes, getTabWidth, gap) => {\n  const inputRange = routes.map((_, i) => i);\n  const outputRange = routes.reduce((acc, _, i) => {\n    if (i === 0) return [0];\n    return [...acc, acc[i - 1] + getTabWidth(i - 1) + (gap ?? 0)];\n  }, []);\n  const translateX = position.interpolate({\n    inputRange,\n    outputRange,\n    extrapolate: 'clamp'\n  });\n  return Animated.multiply(translateX, I18nManager.isRTL ? -1 : 1);\n};\nexport function TabBarIndicator(_ref) {\n  let {\n    getTabWidth,\n    layout,\n    navigationState,\n    position,\n    width,\n    gap,\n    style\n  } = _ref;\n  const isIndicatorShown = React.useRef(false);\n  const isWidthDynamic = width === 'auto';\n  const opacity = useAnimatedValue(isWidthDynamic ? 0 : 1);\n  const indicatorVisible = isWidthDynamic ? layout.width && navigationState.routes.slice(0, navigationState.index).every((_, r) => getTabWidth(r)) : true;\n  React.useEffect(() => {\n    const fadeInIndicator = () => {\n      if (!isIndicatorShown.current && isWidthDynamic && indicatorVisible) {\n        isIndicatorShown.current = true;\n        Animated.timing(opacity, {\n          toValue: 1,\n          duration: 150,\n          easing: Easing.in(Easing.linear),\n          useNativeDriver: true\n        }).start();\n      }\n    };\n    fadeInIndicator();\n    return () => opacity.stopAnimation();\n  }, [indicatorVisible, isWidthDynamic, opacity]);\n  const {\n    routes\n  } = navigationState;\n  const transform = [];\n  if (layout.width) {\n    const translateX = routes.length > 1 ? getTranslateX(position, routes, getTabWidth, gap) : 0;\n    transform.push({\n      translateX\n    });\n  }\n  if (width === 'auto') {\n    const inputRange = routes.map((_, i) => i);\n    const outputRange = inputRange.map(getTabWidth);\n    transform.push({\n      scaleX: routes.length > 1 ? position.interpolate({\n        inputRange,\n        outputRange,\n        extrapolate: 'clamp'\n      }) : outputRange[0]\n    }, {\n      translateX: 0.5\n    });\n  }\n  return React.createElement(Animated.View, {\n    style: [styles.indicator, {\n      width: width === 'auto' ? 1 : width\n    }, layout.width && Platform.OS !== 'macos' ? {\n      left: 0\n    } : {\n      left: `${100 / routes.length * navigationState.index}%`\n    }, {\n      transform\n    }, width === 'auto' ? {\n      opacity: opacity\n    } : null, style]\n  });\n}\nconst styles = StyleSheet.create({\n  indicator: {\n    backgroundColor: '#ffeb3b',\n    position: 'absolute',\n    left: 0,\n    bottom: 0,\n    right: 0,\n    height: 2\n  }\n});","map":{"version":3,"names":["React","Animated","Easing","I18nManager","Platform","StyleSheet","useAnimatedValue","getTranslateX","position","routes","getTabWidth","gap","inputRange","map","_","i","outputRange","reduce","acc","translateX","interpolate","extrapolate","multiply","isRTL","TabBarIndicator","_ref","layout","navigationState","width","style","isIndicatorShown","useRef","isWidthDynamic","opacity","indicatorVisible","slice","index","every","r","useEffect","fadeInIndicator","current","timing","toValue","duration","easing","in","linear","useNativeDriver","start","stopAnimation","transform","length","push","scaleX","createElement","View","styles","indicator","OS","left","create","backgroundColor","bottom","right","height"],"sources":["C:\\Users\\DinhPhongIUH\\Desktop\\nhap\\Yanuo_mobile_Redux\\node_modules\\react-native-tab-view\\src\\TabBarIndicator.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  I18nManager,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  ViewStyle,\n} from 'react-native';\n\nimport type { NavigationState, Route, SceneRendererProps } from './types';\nimport { useAnimatedValue } from './useAnimatedValue';\n\nexport type GetTabWidth = (index: number) => number;\n\nexport type Props<T extends Route> = SceneRendererProps & {\n  navigationState: NavigationState<T>;\n  width: string | number;\n  style?: StyleProp<ViewStyle>;\n  getTabWidth: GetTabWidth;\n  gap?: number;\n};\n\nconst getTranslateX = (\n  position: Animated.AnimatedInterpolation<number>,\n  routes: Route[],\n  getTabWidth: GetTabWidth,\n  gap?: number\n) => {\n  const inputRange = routes.map((_, i) => i);\n\n  // every index contains widths at all previous indices\n  const outputRange = routes.reduce<number[]>((acc, _, i) => {\n    if (i === 0) return [0];\n    return [...acc, acc[i - 1] + getTabWidth(i - 1) + (gap ?? 0)];\n  }, []);\n\n  const translateX = position.interpolate({\n    inputRange,\n    outputRange,\n    extrapolate: 'clamp',\n  });\n\n  return Animated.multiply(translateX, I18nManager.isRTL ? -1 : 1);\n};\n\nexport function TabBarIndicator<T extends Route>({\n  getTabWidth,\n  layout,\n  navigationState,\n  position,\n  width,\n  gap,\n  style,\n}: Props<T>) {\n  const isIndicatorShown = React.useRef(false);\n  const isWidthDynamic = width === 'auto';\n\n  const opacity = useAnimatedValue(isWidthDynamic ? 0 : 1);\n\n  const indicatorVisible = isWidthDynamic\n    ? layout.width &&\n      navigationState.routes\n        .slice(0, navigationState.index)\n        .every((_, r) => getTabWidth(r))\n    : true;\n\n  React.useEffect(() => {\n    const fadeInIndicator = () => {\n      if (\n        !isIndicatorShown.current &&\n        isWidthDynamic &&\n        // We should fade-in the indicator when we have widths for all the tab items\n        indicatorVisible\n      ) {\n        isIndicatorShown.current = true;\n\n        Animated.timing(opacity, {\n          toValue: 1,\n          duration: 150,\n          easing: Easing.in(Easing.linear),\n          useNativeDriver: true,\n        }).start();\n      }\n    };\n\n    fadeInIndicator();\n\n    return () => opacity.stopAnimation();\n  }, [indicatorVisible, isWidthDynamic, opacity]);\n\n  const { routes } = navigationState;\n\n  const transform = [];\n\n  if (layout.width) {\n    const translateX =\n      routes.length > 1 ? getTranslateX(position, routes, getTabWidth, gap) : 0;\n\n    transform.push({ translateX });\n  }\n\n  if (width === 'auto') {\n    const inputRange = routes.map((_, i) => i);\n    const outputRange = inputRange.map(getTabWidth);\n\n    transform.push(\n      {\n        scaleX:\n          routes.length > 1\n            ? position.interpolate({\n                inputRange,\n                outputRange,\n                extrapolate: 'clamp',\n              })\n            : outputRange[0],\n      },\n      { translateX: 0.5 }\n    );\n  }\n\n  return (\n    <Animated.View\n      style={[\n        styles.indicator,\n        { width: width === 'auto' ? 1 : width },\n        // If layout is not available, use `left` property for positioning the indicator\n        // This avoids rendering delay until we are able to calculate translateX\n        // If platform is macos use `left` property as `transform` is broken at the moment.\n        // See: https://github.com/microsoft/react-native-macos/issues/280\n        layout.width && Platform.OS !== 'macos'\n          ? { left: 0 }\n          : { left: `${(100 / routes.length) * navigationState.index}%` },\n        { transform },\n        width === 'auto' ? { opacity: opacity } : null,\n        style,\n      ]}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  indicator: {\n    backgroundColor: '#ffeb3b',\n    position: 'absolute',\n    left: 0,\n    bottom: 0,\n    right: 0,\n    height: 2,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}